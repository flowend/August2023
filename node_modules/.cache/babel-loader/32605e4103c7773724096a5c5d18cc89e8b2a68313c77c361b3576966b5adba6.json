{"ast":null,"code":"import _regeneratorRuntime from \"/Users/flo/Documents/Documents - Flo\\u2019s MacBook Pro/Proiecte/new-learnings/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/flo/Documents/Documents - Flo\\u2019s MacBook Pro/Proiecte/new-learnings/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/flo/Documents/Documents - Flo\\u2019s MacBook Pro/Proiecte/new-learnings/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"/Users/flo/Documents/Documents - Flo\\u2019s MacBook Pro/Proiecte/new-learnings/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthPKCEGrantCodeExchangeError, AuthInvalidCredentialsError, AuthSessionMissingError, AuthInvalidTokenResponseError, AuthUnknownError, isAuthApiError, isAuthError, isAuthRetryableFetchError } from './lib/errors';\nimport { _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch';\nimport { decodeJWTPayload, Deferred, getItemAsync, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, generatePKCEVerifier, generatePKCEChallenge, supportsLocalStorage, stackGuard, isInStackGuard, stackGuardsSupported, parseParametersFromURL } from './lib/helpers';\nimport localStorageAdapter from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\nimport { version } from './lib/version';\npolyfillGlobalThis(); // Make \"globalThis\" available\nvar DEFAULT_OPTIONS = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n  flowType: 'implicit',\n  debug: false\n};\n/** Current session will be checked for refresh at this interval. */\nvar AUTO_REFRESH_TICK_DURATION = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nvar AUTO_REFRESH_TICK_THRESHOLD = 3;\nfunction lockNoOp(_x, _x2, _x3) {\n  return _lockNoOp.apply(this, arguments);\n}\nfunction _lockNoOp() {\n  _lockNoOp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee73(name, acquireTimeout, fn) {\n    return _regeneratorRuntime().wrap(function _callee73$(_context73) {\n      while (1) switch (_context73.prev = _context73.next) {\n        case 0:\n          _context73.next = 2;\n          return fn();\n        case 2:\n          return _context73.abrupt(\"return\", _context73.sent);\n        case 3:\n        case \"end\":\n          return _context73.stop();\n      }\n    }, _callee73);\n  }));\n  return _lockNoOp.apply(this, arguments);\n}\nvar GoTrueClient = /*#__PURE__*/function () {\n  /**\n   * Create a new client for use in the browser.\n   */\n  function GoTrueClient(options) {\n    var _this = this;\n    _classCallCheck(this, GoTrueClient);\n    var _a;\n    this.stateChangeEmitters = new Map();\n    this.autoRefreshTicker = null;\n    this.visibilityChangedCallback = null;\n    this.refreshingDeferred = null;\n    /**\n     * Keeps track of the async client initialization.\n     * When null or not yet resolved the auth state is `unknown`\n     * Once resolved the the auth state is known and it's save to call any further client methods.\n     * Keep extra care to never reject or throw uncaught errors\n     */\n    this.initializePromise = null;\n    this.detectSessionInUrl = true;\n    /**\n     * Used to broadcast state change events to other tabs listening.\n     */\n    this.broadcastChannel = null;\n    this.instanceID = GoTrueClient.nextInstanceID;\n    GoTrueClient.nextInstanceID += 1;\n    if (this.instanceID > 0 && isBrowser()) {\n      console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n    }\n    var settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n    this.logDebugMessages = settings.debug;\n    this.inMemorySession = null;\n    this.storageKey = settings.storageKey;\n    this.autoRefreshToken = settings.autoRefreshToken;\n    this.persistSession = settings.persistSession;\n    this.storage = settings.storage || localStorageAdapter;\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch\n    });\n    this.url = settings.url;\n    this.headers = settings.headers;\n    this.fetch = resolveFetch(settings.fetch);\n    this.lock = settings.lock || lockNoOp;\n    this.detectSessionInUrl = settings.detectSessionInUrl;\n    this.flowType = settings.flowType;\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)\n    };\n    if (this.persistSession && this.storage === localStorageAdapter && !supportsLocalStorage()) {\n      console.warn(\"No storage option exists to persist the session, which may result in unexpected behavior when using auth.\\n        If you want to set persistSession to true, please provide a storage option or you may set persistSession to false to disable this warning.\");\n    }\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      try {\n        this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n      } catch (e) {\n        console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n      }\n      (_a = this.broadcastChannel) === null || _a === void 0 ? void 0 : _a.addEventListener('message', /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _this._debug('received broadcast notification from other tab or client', event);\n                _context.next = 3;\n                return _this._notifyAllSubscribers(event.data.event, event.data.session, false);\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function (_x4) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n    this.initialize();\n  }\n  _createClass(GoTrueClient, [{\n    key: \"_debug\",\n    value: function _debug() {\n      if (this.logDebugMessages) {\n        var _console;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        (_console = console).log.apply(_console, [\"GoTrueClient@\".concat(this.instanceID, \" (\").concat(version, \") \").concat(new Date().toISOString())].concat(args));\n      }\n      return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      if (this.initializePromise) {\n        return this.initializePromise;\n      }\n      return this._initialize();\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n  }, {\n    key: \"_initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!this.initializePromise) {\n                _context5.next = 2;\n                break;\n              }\n              throw new Error('Double call of #_initialize()');\n            case 2:\n              this.initializePromise = this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n                return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                  while (1) switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return stackGuard('_initialize', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                        var isPKCEFlow, _yield$_this2$_getSes, data, error, session, redirectType;\n                        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                          while (1) switch (_context3.prev = _context3.next) {\n                            case 0:\n                              _context3.prev = 0;\n                              if (!isBrowser()) {\n                                _context3.next = 7;\n                                break;\n                              }\n                              _context3.next = 4;\n                              return _this2._isPKCEFlow();\n                            case 4:\n                              _context3.t0 = _context3.sent;\n                              _context3.next = 8;\n                              break;\n                            case 7:\n                              _context3.t0 = false;\n                            case 8:\n                              isPKCEFlow = _context3.t0;\n                              _this2._debug('#_initialize()', 'begin', 'is PKCE flow', isPKCEFlow);\n                              if (!(isPKCEFlow || _this2.detectSessionInUrl && _this2._isImplicitGrantFlow())) {\n                                _context3.next = 27;\n                                break;\n                              }\n                              _context3.next = 13;\n                              return _this2._getSessionFromURL(isPKCEFlow);\n                            case 13:\n                              _yield$_this2$_getSes = _context3.sent;\n                              data = _yield$_this2$_getSes.data;\n                              error = _yield$_this2$_getSes.error;\n                              if (!error) {\n                                _context3.next = 21;\n                                break;\n                              }\n                              _this2._debug('#_initialize()', 'error detecting session from URL', error);\n                              // failed login attempt via url,\n                              // remove old session as in verifyOtp, signUp and signInWith*\n                              _context3.next = 20;\n                              return _this2._removeSession();\n                            case 20:\n                              return _context3.abrupt(\"return\", {\n                                error: error\n                              });\n                            case 21:\n                              session = data.session, redirectType = data.redirectType;\n                              _this2._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n                              _context3.next = 25;\n                              return _this2._saveSession(session);\n                            case 25:\n                              setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                                  while (1) switch (_context2.prev = _context2.next) {\n                                    case 0:\n                                      if (!(redirectType === 'recovery')) {\n                                        _context2.next = 5;\n                                        break;\n                                      }\n                                      _context2.next = 3;\n                                      return _this2._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                                    case 3:\n                                      _context2.next = 7;\n                                      break;\n                                    case 5:\n                                      _context2.next = 7;\n                                      return _this2._notifyAllSubscribers('SIGNED_IN', session);\n                                    case 7:\n                                    case \"end\":\n                                      return _context2.stop();\n                                  }\n                                }, _callee2);\n                              })), 0);\n                              return _context3.abrupt(\"return\", {\n                                error: null\n                              });\n                            case 27:\n                              _context3.next = 29;\n                              return _this2._recoverAndRefresh();\n                            case 29:\n                              return _context3.abrupt(\"return\", {\n                                error: null\n                              });\n                            case 32:\n                              _context3.prev = 32;\n                              _context3.t1 = _context3[\"catch\"](0);\n                              if (!isAuthError(_context3.t1)) {\n                                _context3.next = 36;\n                                break;\n                              }\n                              return _context3.abrupt(\"return\", {\n                                error: _context3.t1\n                              });\n                            case 36:\n                              return _context3.abrupt(\"return\", {\n                                error: new AuthUnknownError('Unexpected error during initialization', _context3.t1)\n                              });\n                            case 37:\n                              _context3.prev = 37;\n                              _context3.next = 40;\n                              return _this2._handleVisibilityChange();\n                            case 40:\n                              _this2._debug('#_initialize()', 'end');\n                              return _context3.finish(37);\n                            case 42:\n                            case \"end\":\n                              return _context3.stop();\n                          }\n                        }, _callee3, null, [[0, 32, 37, 42]]);\n                      })));\n                    case 2:\n                      return _context4.abrupt(\"return\", _context4.sent);\n                    case 3:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }, _callee4);\n              })));\n              _context5.next = 5;\n              return this.initializePromise;\n            case 5:\n              return _context5.abrupt(\"return\", _context5.sent);\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function _initialize() {\n        return _initialize2.apply(this, arguments);\n      }\n      return _initialize;\n    }()\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n  }, {\n    key: \"signUp\",\n    value: function () {\n      var _signUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(credentials) {\n        var _a, _b, _c, res, email, password, options, codeChallenge, codeChallengeMethod, codeVerifier, phone, _password, _options, _res, data, error, session, user;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return this._removeSession();\n            case 3:\n              if (!('email' in credentials)) {\n                _context6.next = 20;\n                break;\n              }\n              email = credentials.email, password = credentials.password, options = credentials.options;\n              codeChallenge = null;\n              codeChallengeMethod = null;\n              if (!(this.flowType === 'pkce')) {\n                _context6.next = 15;\n                break;\n              }\n              codeVerifier = generatePKCEVerifier();\n              _context6.next = 11;\n              return setItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"), codeVerifier);\n            case 11:\n              _context6.next = 13;\n              return generatePKCEChallenge(codeVerifier);\n            case 13:\n              codeChallenge = _context6.sent;\n              codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n            case 15:\n              _context6.next = 17;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/signup\"), {\n                headers: this.headers,\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                body: {\n                  email: email,\n                  password: password,\n                  data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  },\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod\n                },\n                xform: _sessionResponse\n              });\n            case 17:\n              res = _context6.sent;\n              _context6.next = 28;\n              break;\n            case 20:\n              if (!('phone' in credentials)) {\n                _context6.next = 27;\n                break;\n              }\n              phone = credentials.phone, _password = credentials.password, _options = credentials.options;\n              _context6.next = 24;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/signup\"), {\n                headers: this.headers,\n                body: {\n                  phone: phone,\n                  password: _password,\n                  data: (_b = _options === null || _options === void 0 ? void 0 : _options.data) !== null && _b !== void 0 ? _b : {},\n                  channel: (_c = _options === null || _options === void 0 ? void 0 : _options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                  gotrue_meta_security: {\n                    captcha_token: _options === null || _options === void 0 ? void 0 : _options.captchaToken\n                  }\n                },\n                xform: _sessionResponse\n              });\n            case 24:\n              res = _context6.sent;\n              _context6.next = 28;\n              break;\n            case 27:\n              throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            case 28:\n              _res = res, data = _res.data, error = _res.error;\n              if (!(error || !data)) {\n                _context6.next = 31;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 31:\n              session = data.session;\n              user = data.user;\n              if (!data.session) {\n                _context6.next = 38;\n                break;\n              }\n              _context6.next = 36;\n              return this._saveSession(data.session);\n            case 36:\n              _context6.next = 38;\n              return this._notifyAllSubscribers('SIGNED_IN', session);\n            case 38:\n              return _context6.abrupt(\"return\", {\n                data: {\n                  user: user,\n                  session: session\n                },\n                error: null\n              });\n            case 41:\n              _context6.prev = 41;\n              _context6.t0 = _context6[\"catch\"](0);\n              if (!isAuthError(_context6.t0)) {\n                _context6.next = 45;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context6.t0\n              });\n            case 45:\n              throw _context6.t0;\n            case 46:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 41]]);\n      }));\n      function signUp(_x5) {\n        return _signUp.apply(this, arguments);\n      }\n      return signUp;\n    }()\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n  }, {\n    key: \"signInWithPassword\",\n    value: function () {\n      var _signInWithPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(credentials) {\n        var res, email, password, options, phone, _password2, _options2, _res2, data, error;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return this._removeSession();\n            case 3:\n              if (!('email' in credentials)) {\n                _context7.next = 10;\n                break;\n              }\n              email = credentials.email, password = credentials.password, options = credentials.options;\n              _context7.next = 7;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=password\"), {\n                headers: this.headers,\n                body: {\n                  email: email,\n                  password: password,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                xform: _sessionResponse\n              });\n            case 7:\n              res = _context7.sent;\n              _context7.next = 18;\n              break;\n            case 10:\n              if (!('phone' in credentials)) {\n                _context7.next = 17;\n                break;\n              }\n              phone = credentials.phone, _password2 = credentials.password, _options2 = credentials.options;\n              _context7.next = 14;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=password\"), {\n                headers: this.headers,\n                body: {\n                  phone: phone,\n                  password: _password2,\n                  gotrue_meta_security: {\n                    captcha_token: _options2 === null || _options2 === void 0 ? void 0 : _options2.captchaToken\n                  }\n                },\n                xform: _sessionResponse\n              });\n            case 14:\n              res = _context7.sent;\n              _context7.next = 18;\n              break;\n            case 17:\n              throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            case 18:\n              _res2 = res, data = _res2.data, error = _res2.error;\n              if (!error) {\n                _context7.next = 23;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 23:\n              if (!(!data || !data.session || !data.user)) {\n                _context7.next = 25;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new AuthInvalidTokenResponseError()\n              });\n            case 25:\n              if (!data.session) {\n                _context7.next = 30;\n                break;\n              }\n              _context7.next = 28;\n              return this._saveSession(data.session);\n            case 28:\n              _context7.next = 30;\n              return this._notifyAllSubscribers('SIGNED_IN', data.session);\n            case 30:\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: data.user,\n                  session: data.session\n                },\n                error: error\n              });\n            case 33:\n              _context7.prev = 33;\n              _context7.t0 = _context7[\"catch\"](0);\n              if (!isAuthError(_context7.t0)) {\n                _context7.next = 37;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context7.t0\n              });\n            case 37:\n              throw _context7.t0;\n            case 38:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 33]]);\n      }));\n      function signInWithPassword(_x6) {\n        return _signInWithPassword.apply(this, arguments);\n      }\n      return signInWithPassword;\n    }()\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n  }, {\n    key: \"signInWithOAuth\",\n    value: function () {\n      var _signInWithOAuth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(credentials) {\n        var _a, _b, _c, _d;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this._removeSession();\n            case 2:\n              _context8.next = 4;\n              return this._handleProviderSignIn(credentials.provider, {\n                redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n              });\n            case 4:\n              return _context8.abrupt(\"return\", _context8.sent);\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function signInWithOAuth(_x7) {\n        return _signInWithOAuth.apply(this, arguments);\n      }\n      return signInWithOAuth;\n    }()\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n  }, {\n    key: \"exchangeCodeForSession\",\n    value: function () {\n      var _exchangeCodeForSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(authCode) {\n        var codeVerifier, _yield$_request, data, error;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return getItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n            case 2:\n              codeVerifier = _context9.sent;\n              _context9.next = 5;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=pkce\"), {\n                headers: this.headers,\n                body: {\n                  auth_code: authCode,\n                  code_verifier: codeVerifier\n                },\n                xform: _sessionResponse\n              });\n            case 5:\n              _yield$_request = _context9.sent;\n              data = _yield$_request.data;\n              error = _yield$_request.error;\n              _context9.next = 10;\n              return removeItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n            case 10:\n              if (!error) {\n                _context9.next = 14;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 14:\n              if (!(!data || !data.session || !data.user)) {\n                _context9.next = 16;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new AuthInvalidTokenResponseError()\n              });\n            case 16:\n              if (!data.session) {\n                _context9.next = 21;\n                break;\n              }\n              _context9.next = 19;\n              return this._saveSession(data.session);\n            case 19:\n              _context9.next = 21;\n              return this._notifyAllSubscribers('SIGNED_IN', data.session);\n            case 21:\n              return _context9.abrupt(\"return\", {\n                data: data,\n                error: error\n              });\n            case 22:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function exchangeCodeForSession(_x8) {\n        return _exchangeCodeForSession.apply(this, arguments);\n      }\n      return exchangeCodeForSession;\n    }()\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n  }, {\n    key: \"signInWithIdToken\",\n    value: function () {\n      var _signInWithIdToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(credentials) {\n        var options, provider, token, access_token, nonce, res, data, error;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this._removeSession();\n            case 2:\n              _context10.prev = 2;\n              options = credentials.options, provider = credentials.provider, token = credentials.token, access_token = credentials.access_token, nonce = credentials.nonce;\n              _context10.next = 6;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=id_token\"), {\n                headers: this.headers,\n                body: {\n                  provider: provider,\n                  id_token: token,\n                  access_token: access_token,\n                  nonce: nonce,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                xform: _sessionResponse\n              });\n            case 6:\n              res = _context10.sent;\n              data = res.data, error = res.error;\n              if (!error) {\n                _context10.next = 12;\n                break;\n              }\n              return _context10.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 12:\n              if (!(!data || !data.session || !data.user)) {\n                _context10.next = 14;\n                break;\n              }\n              return _context10.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new AuthInvalidTokenResponseError()\n              });\n            case 14:\n              if (!data.session) {\n                _context10.next = 19;\n                break;\n              }\n              _context10.next = 17;\n              return this._saveSession(data.session);\n            case 17:\n              _context10.next = 19;\n              return this._notifyAllSubscribers('SIGNED_IN', data.session);\n            case 19:\n              return _context10.abrupt(\"return\", {\n                data: data,\n                error: error\n              });\n            case 22:\n              _context10.prev = 22;\n              _context10.t0 = _context10[\"catch\"](2);\n              if (!isAuthError(_context10.t0)) {\n                _context10.next = 26;\n                break;\n              }\n              return _context10.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context10.t0\n              });\n            case 26:\n              throw _context10.t0;\n            case 27:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this, [[2, 22]]);\n      }));\n      function signInWithIdToken(_x9) {\n        return _signInWithIdToken.apply(this, arguments);\n      }\n      return signInWithIdToken;\n    }()\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n  }, {\n    key: \"signInWithOtp\",\n    value: function () {\n      var _signInWithOtp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(credentials) {\n        var _a, _b, _c, _d, _e, email, options, codeChallenge, codeChallengeMethod, codeVerifier, _yield$_request2, error, phone, _options3, _yield$_request3, data, _error;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _context11.next = 3;\n              return this._removeSession();\n            case 3:\n              if (!('email' in credentials)) {\n                _context11.next = 20;\n                break;\n              }\n              email = credentials.email, options = credentials.options;\n              codeChallenge = null;\n              codeChallengeMethod = null;\n              if (!(this.flowType === 'pkce')) {\n                _context11.next = 15;\n                break;\n              }\n              codeVerifier = generatePKCEVerifier();\n              _context11.next = 11;\n              return setItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"), codeVerifier);\n            case 11:\n              _context11.next = 13;\n              return generatePKCEChallenge(codeVerifier);\n            case 13:\n              codeChallenge = _context11.sent;\n              codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n            case 15:\n              _context11.next = 17;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/otp\"), {\n                headers: this.headers,\n                body: {\n                  email: email,\n                  data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                  create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  },\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod\n                },\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n              });\n            case 17:\n              _yield$_request2 = _context11.sent;\n              error = _yield$_request2.error;\n              return _context11.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 20:\n              if (!('phone' in credentials)) {\n                _context11.next = 28;\n                break;\n              }\n              phone = credentials.phone, _options3 = credentials.options;\n              _context11.next = 24;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/otp\"), {\n                headers: this.headers,\n                body: {\n                  phone: phone,\n                  data: (_c = _options3 === null || _options3 === void 0 ? void 0 : _options3.data) !== null && _c !== void 0 ? _c : {},\n                  create_user: (_d = _options3 === null || _options3 === void 0 ? void 0 : _options3.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                  gotrue_meta_security: {\n                    captcha_token: _options3 === null || _options3 === void 0 ? void 0 : _options3.captchaToken\n                  },\n                  channel: (_e = _options3 === null || _options3 === void 0 ? void 0 : _options3.channel) !== null && _e !== void 0 ? _e : 'sms'\n                }\n              });\n            case 24:\n              _yield$_request3 = _context11.sent;\n              data = _yield$_request3.data;\n              _error = _yield$_request3.error;\n              return _context11.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error\n              });\n            case 28:\n              throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n            case 31:\n              _context11.prev = 31;\n              _context11.t0 = _context11[\"catch\"](0);\n              if (!isAuthError(_context11.t0)) {\n                _context11.next = 35;\n                break;\n              }\n              return _context11.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context11.t0\n              });\n            case 35:\n              throw _context11.t0;\n            case 36:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this, [[0, 31]]);\n      }));\n      function signInWithOtp(_x10) {\n        return _signInWithOtp.apply(this, arguments);\n      }\n      return signInWithOtp;\n    }()\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     */\n  }, {\n    key: \"verifyOtp\",\n    value: function () {\n      var _verifyOtp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(params) {\n        var _a, _b, redirectTo, captchaToken, _yield$_request4, data, error, session, user;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              if (!(params.type !== 'email_change' && params.type !== 'phone_change')) {\n                _context12.next = 4;\n                break;\n              }\n              _context12.next = 4;\n              return this._removeSession();\n            case 4:\n              redirectTo = undefined;\n              captchaToken = undefined;\n              if ('options' in params) {\n                redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n                captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n              }\n              _context12.next = 9;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/verify\"), {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), {\n                  gotrue_meta_security: {\n                    captcha_token: captchaToken\n                  }\n                }),\n                redirectTo: redirectTo,\n                xform: _sessionResponse\n              });\n            case 9:\n              _yield$_request4 = _context12.sent;\n              data = _yield$_request4.data;\n              error = _yield$_request4.error;\n              if (!error) {\n                _context12.next = 14;\n                break;\n              }\n              throw error;\n            case 14:\n              if (data) {\n                _context12.next = 16;\n                break;\n              }\n              throw new Error('An error occurred on token verification.');\n            case 16:\n              session = data.session;\n              user = data.user;\n              if (!(session === null || session === void 0 ? void 0 : session.access_token)) {\n                _context12.next = 23;\n                break;\n              }\n              _context12.next = 21;\n              return this._saveSession(session);\n            case 21:\n              _context12.next = 23;\n              return this._notifyAllSubscribers('SIGNED_IN', session);\n            case 23:\n              return _context12.abrupt(\"return\", {\n                data: {\n                  user: user,\n                  session: session\n                },\n                error: null\n              });\n            case 26:\n              _context12.prev = 26;\n              _context12.t0 = _context12[\"catch\"](0);\n              if (!isAuthError(_context12.t0)) {\n                _context12.next = 30;\n                break;\n              }\n              return _context12.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context12.t0\n              });\n            case 30:\n              throw _context12.t0;\n            case 31:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this, [[0, 26]]);\n      }));\n      function verifyOtp(_x11) {\n        return _verifyOtp.apply(this, arguments);\n      }\n      return verifyOtp;\n    }()\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n  }, {\n    key: \"signInWithSSO\",\n    value: function () {\n      var _signInWithSSO = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(params) {\n        var _a, _b, _c;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              _context13.next = 3;\n              return this._removeSession();\n            case 3:\n              _context13.next = 5;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/sso\"), {\n                body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n                  provider_id: params.providerId\n                } : null), 'domain' in params ? {\n                  domain: params.domain\n                } : null), {\n                  redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n                }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: params.options.captchaToken\n                  }\n                } : null), {\n                  skip_http_redirect: true\n                }),\n                headers: this.headers,\n                xform: _ssoResponse\n              });\n            case 5:\n              return _context13.abrupt(\"return\", _context13.sent);\n            case 8:\n              _context13.prev = 8;\n              _context13.t0 = _context13[\"catch\"](0);\n              if (!isAuthError(_context13.t0)) {\n                _context13.next = 12;\n                break;\n              }\n              return _context13.abrupt(\"return\", {\n                data: null,\n                error: _context13.t0\n              });\n            case 12:\n              throw _context13.t0;\n            case 13:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this, [[0, 8]]);\n      }));\n      function signInWithSSO(_x12) {\n        return _signInWithSSO.apply(this, arguments);\n      }\n      return signInWithSSO;\n    }()\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n  }, {\n    key: \"reauthenticate\",\n    value: function () {\n      var _reauthenticate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n        var _this3 = this;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n              _context15.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(result) {\n                  var session, sessionError, _yield$_request5, error;\n                  return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n                    while (1) switch (_context14.prev = _context14.next) {\n                      case 0:\n                        session = result.data.session, sessionError = result.error;\n                        if (!sessionError) {\n                          _context14.next = 3;\n                          break;\n                        }\n                        throw sessionError;\n                      case 3:\n                        if (session) {\n                          _context14.next = 5;\n                          break;\n                        }\n                        throw new AuthSessionMissingError();\n                      case 5:\n                        _context14.next = 7;\n                        return _request(_this3.fetch, 'GET', \"\".concat(_this3.url, \"/reauthenticate\"), {\n                          headers: _this3.headers,\n                          jwt: session.access_token\n                        });\n                      case 7:\n                        _yield$_request5 = _context14.sent;\n                        error = _yield$_request5.error;\n                        return _context14.abrupt(\"return\", {\n                          data: {\n                            user: null,\n                            session: null\n                          },\n                          error: error\n                        });\n                      case 10:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }, _callee14);\n                }));\n                return function (_x13) {\n                  return _ref5.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context15.abrupt(\"return\", _context15.sent);\n            case 6:\n              _context15.prev = 6;\n              _context15.t0 = _context15[\"catch\"](0);\n              if (!isAuthError(_context15.t0)) {\n                _context15.next = 10;\n                break;\n              }\n              return _context15.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context15.t0\n              });\n            case 10:\n              throw _context15.t0;\n            case 11:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this, [[0, 6]]);\n      }));\n      function reauthenticate() {\n        return _reauthenticate.apply(this, arguments);\n      }\n      return reauthenticate;\n    }()\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n  }, {\n    key: \"resend\",\n    value: function () {\n      var _resend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(credentials) {\n        var endpoint, email, type, options, _yield$_request6, error, phone, _type, _options4, _yield$_request7, data, _error2;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              if (!(credentials.type != 'email_change' && credentials.type != 'phone_change')) {\n                _context16.next = 4;\n                break;\n              }\n              _context16.next = 4;\n              return this._removeSession();\n            case 4:\n              endpoint = \"\".concat(this.url, \"/resend\");\n              if (!('email' in credentials)) {\n                _context16.next = 14;\n                break;\n              }\n              email = credentials.email, type = credentials.type, options = credentials.options;\n              _context16.next = 9;\n              return _request(this.fetch, 'POST', endpoint, {\n                headers: this.headers,\n                body: {\n                  email: email,\n                  type: type,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n              });\n            case 9:\n              _yield$_request6 = _context16.sent;\n              error = _yield$_request6.error;\n              return _context16.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 14:\n              if (!('phone' in credentials)) {\n                _context16.next = 22;\n                break;\n              }\n              phone = credentials.phone, _type = credentials.type, _options4 = credentials.options;\n              _context16.next = 18;\n              return _request(this.fetch, 'POST', endpoint, {\n                headers: this.headers,\n                body: {\n                  phone: phone,\n                  type: _type,\n                  gotrue_meta_security: {\n                    captcha_token: _options4 === null || _options4 === void 0 ? void 0 : _options4.captchaToken\n                  }\n                }\n              });\n            case 18:\n              _yield$_request7 = _context16.sent;\n              data = _yield$_request7.data;\n              _error2 = _yield$_request7.error;\n              return _context16.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error2\n              });\n            case 22:\n              throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n            case 25:\n              _context16.prev = 25;\n              _context16.t0 = _context16[\"catch\"](0);\n              if (!isAuthError(_context16.t0)) {\n                _context16.next = 29;\n                break;\n              }\n              return _context16.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context16.t0\n              });\n            case 29:\n              throw _context16.t0;\n            case 30:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this, [[0, 25]]);\n      }));\n      function resend(_x14) {\n        return _resend.apply(this, arguments);\n      }\n      return resend;\n    }()\n    /**\n     * Returns the session, refreshing it if necessary.\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     */\n  }, {\n    key: \"getSession\",\n    value: function () {\n      var _getSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              return _context18.abrupt(\"return\", this._useSession( /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(result) {\n                  return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n                    while (1) switch (_context17.prev = _context17.next) {\n                      case 0:\n                        return _context17.abrupt(\"return\", result);\n                      case 1:\n                      case \"end\":\n                        return _context17.stop();\n                    }\n                  }, _callee17);\n                }));\n                return function (_x15) {\n                  return _ref6.apply(this, arguments);\n                };\n              }()));\n            case 1:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function getSession() {\n        return _getSession.apply(this, arguments);\n      }\n      return getSession;\n    }()\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n  }, {\n    key: \"_acquireLock\",\n    value: function () {\n      var _acquireLock2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(acquireTimeout, fn) {\n        var _this4 = this;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              this._debug('#_acquireLock', 'begin', acquireTimeout);\n              _context21.prev = 1;\n              _context21.next = 4;\n              return stackGuardsSupported();\n            case 4:\n              if (_context21.sent) {\n                _context21.next = 9;\n                break;\n              }\n              this._debug('#_acquireLock', 'Stack guards not supported, so exclusive locking is not performed as it can lead to deadlocks if the lock is attempted to be recursively acquired (as the recursion cannot be detected).');\n              _context21.next = 8;\n              return fn();\n            case 8:\n              return _context21.abrupt(\"return\", _context21.sent);\n            case 9:\n              if (!isInStackGuard('_acquireLock')) {\n                _context21.next = 14;\n                break;\n              }\n              this._debug('#_acquireLock', 'recursive call');\n              _context21.next = 13;\n              return fn();\n            case 13:\n              return _context21.abrupt(\"return\", _context21.sent);\n            case 14:\n              _context21.next = 16;\n              return this.lock(\"lock:\".concat(this.storageKey), acquireTimeout, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n                return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n                  while (1) switch (_context20.prev = _context20.next) {\n                    case 0:\n                      _this4._debug('#_acquireLock', 'lock acquired for storage key', _this4.storageKey);\n                      _context20.prev = 1;\n                      _context20.next = 4;\n                      return stackGuard('_acquireLock', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n                        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n                          while (1) switch (_context19.prev = _context19.next) {\n                            case 0:\n                              _context19.next = 2;\n                              return fn();\n                            case 2:\n                              return _context19.abrupt(\"return\", _context19.sent);\n                            case 3:\n                            case \"end\":\n                              return _context19.stop();\n                          }\n                        }, _callee19);\n                      })));\n                    case 4:\n                      return _context20.abrupt(\"return\", _context20.sent);\n                    case 5:\n                      _context20.prev = 5;\n                      _this4._debug('#_acquireLock', 'lock released for storage key', _this4.storageKey);\n                      return _context20.finish(5);\n                    case 8:\n                    case \"end\":\n                      return _context20.stop();\n                  }\n                }, _callee20, null, [[1,, 5, 8]]);\n              })));\n            case 16:\n              return _context21.abrupt(\"return\", _context21.sent);\n            case 17:\n              _context21.prev = 17;\n              this._debug('#_acquireLock', 'end');\n              return _context21.finish(17);\n            case 20:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this, [[1,, 17, 20]]);\n      }));\n      function _acquireLock(_x16, _x17) {\n        return _acquireLock2.apply(this, arguments);\n      }\n      return _acquireLock;\n    }()\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n  }, {\n    key: \"_useSession\",\n    value: function () {\n      var _useSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(fn) {\n        var _this5 = this;\n        var result;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              this._debug('#_useSession', 'begin');\n              _context24.prev = 1;\n              if (!isInStackGuard('_useSession')) {\n                _context24.next = 10;\n                break;\n              }\n              this._debug('#_useSession', 'recursive call');\n              // the use of __loadSession here is the only correct use of the function!\n              _context24.next = 6;\n              return this.__loadSession();\n            case 6:\n              result = _context24.sent;\n              _context24.next = 9;\n              return fn(result);\n            case 9:\n              return _context24.abrupt(\"return\", _context24.sent);\n            case 10:\n              _context24.next = 12;\n              return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {\n                return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n                  while (1) switch (_context23.prev = _context23.next) {\n                    case 0:\n                      _context23.next = 2;\n                      return stackGuard('_useSession', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {\n                        var result;\n                        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n                          while (1) switch (_context22.prev = _context22.next) {\n                            case 0:\n                              _context22.next = 2;\n                              return _this5.__loadSession();\n                            case 2:\n                              result = _context22.sent;\n                              _context22.next = 5;\n                              return fn(result);\n                            case 5:\n                              return _context22.abrupt(\"return\", _context22.sent);\n                            case 6:\n                            case \"end\":\n                              return _context22.stop();\n                          }\n                        }, _callee22);\n                      })));\n                    case 2:\n                      return _context23.abrupt(\"return\", _context23.sent);\n                    case 3:\n                    case \"end\":\n                      return _context23.stop();\n                  }\n                }, _callee23);\n              })));\n            case 12:\n              return _context24.abrupt(\"return\", _context24.sent);\n            case 13:\n              _context24.prev = 13;\n              this._debug('#_useSession', 'end');\n              return _context24.finish(13);\n            case 16:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this, [[1,, 13, 16]]);\n      }));\n      function _useSession(_x18) {\n        return _useSession2.apply(this, arguments);\n      }\n      return _useSession;\n    }()\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n  }, {\n    key: \"__loadSession\",\n    value: function () {\n      var _loadSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25() {\n        var currentSession, maybeSession, hasExpired, _yield$this$_callRefr, session, error;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              this._debug('#__loadSession()', 'begin');\n              _context25.t0 = this.logDebugMessages && !isInStackGuard('_useSession');\n              if (!_context25.t0) {\n                _context25.next = 6;\n                break;\n              }\n              _context25.next = 5;\n              return stackGuardsSupported();\n            case 5:\n              _context25.t0 = _context25.sent;\n            case 6:\n              if (!_context25.t0) {\n                _context25.next = 8;\n                break;\n              }\n              throw new Error('Please use #_useSession()');\n            case 8:\n              if (isInStackGuard('_initialize')) {\n                this._debug('#__loadSession', '#_initialize recursion detected', new Error().stack);\n              }\n              // always wait for #_initialize() to finish before loading anything from\n              // storage\n              _context25.next = 11;\n              return this.initializePromise;\n            case 11:\n              _context25.prev = 11;\n              currentSession = null;\n              if (!this.persistSession) {\n                _context25.next = 28;\n                break;\n              }\n              _context25.next = 16;\n              return getItemAsync(this.storage, this.storageKey);\n            case 16:\n              maybeSession = _context25.sent;\n              this._debug('#getSession()', 'session from storage', maybeSession);\n              if (!(maybeSession !== null)) {\n                _context25.next = 26;\n                break;\n              }\n              if (!this._isValidSession(maybeSession)) {\n                _context25.next = 23;\n                break;\n              }\n              currentSession = maybeSession;\n              _context25.next = 26;\n              break;\n            case 23:\n              this._debug('#getSession()', 'session from storage is not valid');\n              _context25.next = 26;\n              return this._removeSession();\n            case 26:\n              _context25.next = 30;\n              break;\n            case 28:\n              currentSession = this.inMemorySession;\n              this._debug('#getSession()', 'session from memory', currentSession);\n            case 30:\n              if (currentSession) {\n                _context25.next = 32;\n                break;\n              }\n              return _context25.abrupt(\"return\", {\n                data: {\n                  session: null\n                },\n                error: null\n              });\n            case 32:\n              hasExpired = currentSession.expires_at ? currentSession.expires_at <= Date.now() / 1000 : false;\n              this._debug('#__loadSession()', \"session has\".concat(hasExpired ? '' : ' not', \" expired\"), 'expires_at', currentSession.expires_at);\n              if (hasExpired) {\n                _context25.next = 36;\n                break;\n              }\n              return _context25.abrupt(\"return\", {\n                data: {\n                  session: currentSession\n                },\n                error: null\n              });\n            case 36:\n              _context25.next = 38;\n              return this._callRefreshToken(currentSession.refresh_token);\n            case 38:\n              _yield$this$_callRefr = _context25.sent;\n              session = _yield$this$_callRefr.session;\n              error = _yield$this$_callRefr.error;\n              if (!error) {\n                _context25.next = 43;\n                break;\n              }\n              return _context25.abrupt(\"return\", {\n                data: {\n                  session: null\n                },\n                error: error\n              });\n            case 43:\n              return _context25.abrupt(\"return\", {\n                data: {\n                  session: session\n                },\n                error: null\n              });\n            case 44:\n              _context25.prev = 44;\n              this._debug('#__loadSession()', 'end');\n              return _context25.finish(44);\n            case 47:\n            case \"end\":\n              return _context25.stop();\n          }\n        }, _callee25, this, [[11,, 44, 47]]);\n      }));\n      function __loadSession() {\n        return _loadSession.apply(this, arguments);\n      }\n      return __loadSession;\n    }()\n    /**\n     * Gets the current user details if there is an existing session.\n     * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n     */\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(jwt) {\n        var _this6 = this;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.prev = 0;\n              if (!jwt) {\n                _context27.next = 5;\n                break;\n              }\n              _context27.next = 4;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/user\"), {\n                headers: this.headers,\n                jwt: jwt,\n                xform: _userResponse\n              });\n            case 4:\n              return _context27.abrupt(\"return\", _context27.sent);\n            case 5:\n              _context27.next = 7;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(result) {\n                  var _a, _b, data, error;\n                  return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n                    while (1) switch (_context26.prev = _context26.next) {\n                      case 0:\n                        data = result.data, error = result.error;\n                        if (!error) {\n                          _context26.next = 3;\n                          break;\n                        }\n                        throw error;\n                      case 3:\n                        _context26.next = 5;\n                        return _request(_this6.fetch, 'GET', \"\".concat(_this6.url, \"/user\"), {\n                          headers: _this6.headers,\n                          jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined,\n                          xform: _userResponse\n                        });\n                      case 5:\n                        return _context26.abrupt(\"return\", _context26.sent);\n                      case 6:\n                      case \"end\":\n                        return _context26.stop();\n                    }\n                  }, _callee26);\n                }));\n                return function (_x20) {\n                  return _ref11.apply(this, arguments);\n                };\n              }());\n            case 7:\n              return _context27.abrupt(\"return\", _context27.sent);\n            case 10:\n              _context27.prev = 10;\n              _context27.t0 = _context27[\"catch\"](0);\n              if (!isAuthError(_context27.t0)) {\n                _context27.next = 14;\n                break;\n              }\n              return _context27.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context27.t0\n              });\n            case 14:\n              throw _context27.t0;\n            case 15:\n            case \"end\":\n              return _context27.stop();\n          }\n        }, _callee27, this, [[0, 10]]);\n      }));\n      function getUser(_x19) {\n        return _getUser.apply(this, arguments);\n      }\n      return getUser;\n    }()\n    /**\n     * Updates user data for a logged in user.\n     */\n  }, {\n    key: \"updateUser\",\n    value: function () {\n      var _updateUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(attributes) {\n        var _this7 = this;\n        var options,\n          _args29 = arguments;\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) switch (_context29.prev = _context29.next) {\n            case 0:\n              options = _args29.length > 1 && _args29[1] !== undefined ? _args29[1] : {};\n              _context29.prev = 1;\n              _context29.next = 4;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(result) {\n                  var sessionData, sessionError, session, _yield$_request8, data, userError;\n                  return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n                    while (1) switch (_context28.prev = _context28.next) {\n                      case 0:\n                        sessionData = result.data, sessionError = result.error;\n                        if (!sessionError) {\n                          _context28.next = 3;\n                          break;\n                        }\n                        throw sessionError;\n                      case 3:\n                        if (sessionData.session) {\n                          _context28.next = 5;\n                          break;\n                        }\n                        throw new AuthSessionMissingError();\n                      case 5:\n                        session = sessionData.session;\n                        _context28.next = 8;\n                        return _request(_this7.fetch, 'PUT', \"\".concat(_this7.url, \"/user\"), {\n                          headers: _this7.headers,\n                          redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                          body: attributes,\n                          jwt: session.access_token,\n                          xform: _userResponse\n                        });\n                      case 8:\n                        _yield$_request8 = _context28.sent;\n                        data = _yield$_request8.data;\n                        userError = _yield$_request8.error;\n                        if (!userError) {\n                          _context28.next = 13;\n                          break;\n                        }\n                        throw userError;\n                      case 13:\n                        session.user = data.user;\n                        _context28.next = 16;\n                        return _this7._saveSession(session);\n                      case 16:\n                        _context28.next = 18;\n                        return _this7._notifyAllSubscribers('USER_UPDATED', session);\n                      case 18:\n                        return _context28.abrupt(\"return\", {\n                          data: {\n                            user: session.user\n                          },\n                          error: null\n                        });\n                      case 19:\n                      case \"end\":\n                        return _context28.stop();\n                    }\n                  }, _callee28);\n                }));\n                return function (_x22) {\n                  return _ref12.apply(this, arguments);\n                };\n              }());\n            case 4:\n              return _context29.abrupt(\"return\", _context29.sent);\n            case 7:\n              _context29.prev = 7;\n              _context29.t0 = _context29[\"catch\"](1);\n              if (!isAuthError(_context29.t0)) {\n                _context29.next = 11;\n                break;\n              }\n              return _context29.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context29.t0\n              });\n            case 11:\n              throw _context29.t0;\n            case 12:\n            case \"end\":\n              return _context29.stop();\n          }\n        }, _callee29, this, [[1, 7]]);\n      }));\n      function updateUser(_x21) {\n        return _updateUser.apply(this, arguments);\n      }\n      return updateUser;\n    }()\n    /**\n     * Decodes a JWT (without performing any validation).\n     */\n  }, {\n    key: \"_decodeJWT\",\n    value: function _decodeJWT(jwt) {\n      return decodeJWTPayload(jwt);\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n  }, {\n    key: \"setSession\",\n    value: function () {\n      var _setSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(currentSession) {\n        var timeNow, expiresAt, hasExpired, session, payload, _yield$this$_callRefr2, refreshedSession, error, _yield$this$getUser, data, _error3;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) switch (_context30.prev = _context30.next) {\n            case 0:\n              _context30.prev = 0;\n              if (!(!currentSession.access_token || !currentSession.refresh_token)) {\n                _context30.next = 3;\n                break;\n              }\n              throw new AuthSessionMissingError();\n            case 3:\n              timeNow = Date.now() / 1000;\n              expiresAt = timeNow;\n              hasExpired = true;\n              session = null;\n              payload = decodeJWTPayload(currentSession.access_token);\n              if (payload.exp) {\n                expiresAt = payload.exp;\n                hasExpired = expiresAt <= timeNow;\n              }\n              if (!hasExpired) {\n                _context30.next = 22;\n                break;\n              }\n              _context30.next = 12;\n              return this._callRefreshToken(currentSession.refresh_token);\n            case 12:\n              _yield$this$_callRefr2 = _context30.sent;\n              refreshedSession = _yield$this$_callRefr2.session;\n              error = _yield$this$_callRefr2.error;\n              if (!error) {\n                _context30.next = 17;\n                break;\n              }\n              return _context30.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              });\n            case 17:\n              if (refreshedSession) {\n                _context30.next = 19;\n                break;\n              }\n              return _context30.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: null\n              });\n            case 19:\n              session = refreshedSession;\n              _context30.next = 34;\n              break;\n            case 22:\n              _context30.next = 24;\n              return this.getUser(currentSession.access_token);\n            case 24:\n              _yield$this$getUser = _context30.sent;\n              data = _yield$this$getUser.data;\n              _error3 = _yield$this$getUser.error;\n              if (!_error3) {\n                _context30.next = 29;\n                break;\n              }\n              throw _error3;\n            case 29:\n              session = {\n                access_token: currentSession.access_token,\n                refresh_token: currentSession.refresh_token,\n                user: data.user,\n                token_type: 'bearer',\n                expires_in: expiresAt - timeNow,\n                expires_at: expiresAt\n              };\n              _context30.next = 32;\n              return this._saveSession(session);\n            case 32:\n              _context30.next = 34;\n              return this._notifyAllSubscribers('SIGNED_IN', session);\n            case 34:\n              return _context30.abrupt(\"return\", {\n                data: {\n                  user: session.user,\n                  session: session\n                },\n                error: null\n              });\n            case 37:\n              _context30.prev = 37;\n              _context30.t0 = _context30[\"catch\"](0);\n              if (!isAuthError(_context30.t0)) {\n                _context30.next = 41;\n                break;\n              }\n              return _context30.abrupt(\"return\", {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error: _context30.t0\n              });\n            case 41:\n              throw _context30.t0;\n            case 42:\n            case \"end\":\n              return _context30.stop();\n          }\n        }, _callee30, this, [[0, 37]]);\n      }));\n      function setSession(_x23) {\n        return _setSession.apply(this, arguments);\n      }\n      return setSession;\n    }()\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n  }, {\n    key: \"refreshSession\",\n    value: function () {\n      var _refreshSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32(currentSession) {\n        var _this8 = this;\n        return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n          while (1) switch (_context32.prev = _context32.next) {\n            case 0:\n              _context32.prev = 0;\n              _context32.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(result) {\n                  var _a, data, _error4, _yield$_this8$_callRe, session, error;\n                  return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n                    while (1) switch (_context31.prev = _context31.next) {\n                      case 0:\n                        if (currentSession) {\n                          _context31.next = 5;\n                          break;\n                        }\n                        data = result.data, _error4 = result.error;\n                        if (!_error4) {\n                          _context31.next = 4;\n                          break;\n                        }\n                        throw _error4;\n                      case 4:\n                        currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                      case 5:\n                        if (currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token) {\n                          _context31.next = 7;\n                          break;\n                        }\n                        throw new AuthSessionMissingError();\n                      case 7:\n                        _context31.next = 9;\n                        return _this8._callRefreshToken(currentSession.refresh_token);\n                      case 9:\n                        _yield$_this8$_callRe = _context31.sent;\n                        session = _yield$_this8$_callRe.session;\n                        error = _yield$_this8$_callRe.error;\n                        if (!error) {\n                          _context31.next = 14;\n                          break;\n                        }\n                        return _context31.abrupt(\"return\", {\n                          data: {\n                            user: null,\n                            session: null\n                          },\n                          error: error\n                        });\n                      case 14:\n                        if (session) {\n                          _context31.next = 16;\n                          break;\n                        }\n                        return _context31.abrupt(\"return\", {\n                          data: {\n                            user: null,\n                            session: null\n                          },\n                          error: null\n                        });\n                      case 16:\n                        return _context31.abrupt(\"return\", {\n                          data: {\n                            user: session.user,\n                            session: session\n                          },\n                          error: null\n                        });\n                      case 17:\n                      case \"end\":\n                        return _context31.stop();\n                    }\n                  }, _callee31);\n                }));\n                return function (_x25) {\n                  return _ref13.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context32.abrupt(\"return\", _context32.sent);\n            case 6:\n              _context32.prev = 6;\n              _context32.t0 = _context32[\"catch\"](0);\n              if (!isAuthError(_context32.t0)) {\n                _context32.next = 10;\n                break;\n              }\n              return _context32.abrupt(\"return\", {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: _context32.t0\n              });\n            case 10:\n              throw _context32.t0;\n            case 11:\n            case \"end\":\n              return _context32.stop();\n          }\n        }, _callee32, this, [[0, 6]]);\n      }));\n      function refreshSession(_x24) {\n        return _refreshSession.apply(this, arguments);\n      }\n      return refreshSession;\n    }()\n    /**\n     * Gets the session data from a URL string\n     */\n  }, {\n    key: \"_getSessionFromURL\",\n    value: function () {\n      var _getSessionFromURL2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(isPKCEFlow) {\n        var params, _yield$this$exchangeC, _data, _error5, url, provider_token, provider_refresh_token, access_token, refresh_token, expires_in, token_type, timeNow, expiresIn, expires_at, _yield$this$getUser2, data, error, session;\n        return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n          while (1) switch (_context33.prev = _context33.next) {\n            case 0:\n              _context33.prev = 0;\n              if (isBrowser()) {\n                _context33.next = 3;\n                break;\n              }\n              throw new AuthImplicitGrantRedirectError('No browser detected.');\n            case 3:\n              if (!(this.flowType === 'implicit' && !this._isImplicitGrantFlow())) {\n                _context33.next = 7;\n                break;\n              }\n              throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n            case 7:\n              if (!(this.flowType == 'pkce' && !isPKCEFlow)) {\n                _context33.next = 9;\n                break;\n              }\n              throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n            case 9:\n              params = parseParametersFromURL(window.location.href);\n              if (!isPKCEFlow) {\n                _context33.next = 24;\n                break;\n              }\n              if (params.code) {\n                _context33.next = 13;\n                break;\n              }\n              throw new AuthPKCEGrantCodeExchangeError('No code detected.');\n            case 13:\n              _context33.next = 15;\n              return this.exchangeCodeForSession(params.code);\n            case 15:\n              _yield$this$exchangeC = _context33.sent;\n              _data = _yield$this$exchangeC.data;\n              _error5 = _yield$this$exchangeC.error;\n              if (!_error5) {\n                _context33.next = 20;\n                break;\n              }\n              throw _error5;\n            case 20:\n              url = new URL(window.location.href);\n              url.searchParams.delete('code');\n              window.history.replaceState(window.history.state, '', url.toString());\n              return _context33.abrupt(\"return\", {\n                data: {\n                  session: _data.session,\n                  redirectType: null\n                },\n                error: null\n              });\n            case 24:\n              if (!(params.error || params.error_description || params.error_code)) {\n                _context33.next = 26;\n                break;\n              }\n              throw new AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                error: params.error || 'unspecified_error',\n                code: params.error_code || 'unspecified_code'\n              });\n            case 26:\n              provider_token = params.provider_token, provider_refresh_token = params.provider_refresh_token, access_token = params.access_token, refresh_token = params.refresh_token, expires_in = params.expires_in, token_type = params.token_type;\n              if (!(!access_token || !expires_in || !refresh_token || !token_type)) {\n                _context33.next = 29;\n                break;\n              }\n              throw new AuthImplicitGrantRedirectError('No session defined in URL');\n            case 29:\n              timeNow = Math.round(Date.now() / 1000);\n              expiresIn = parseInt(expires_in);\n              expires_at = timeNow + expiresIn;\n              _context33.next = 34;\n              return this.getUser(access_token);\n            case 34:\n              _yield$this$getUser2 = _context33.sent;\n              data = _yield$this$getUser2.data;\n              error = _yield$this$getUser2.error;\n              if (!error) {\n                _context33.next = 39;\n                break;\n              }\n              throw error;\n            case 39:\n              session = {\n                provider_token: provider_token,\n                provider_refresh_token: provider_refresh_token,\n                access_token: access_token,\n                expires_in: expiresIn,\n                expires_at: expires_at,\n                refresh_token: refresh_token,\n                token_type: token_type,\n                user: data.user\n              }; // Remove tokens from URL\n              window.location.hash = '';\n              this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n              return _context33.abrupt(\"return\", {\n                data: {\n                  session: session,\n                  redirectType: params.type\n                },\n                error: null\n              });\n            case 45:\n              _context33.prev = 45;\n              _context33.t0 = _context33[\"catch\"](0);\n              if (!isAuthError(_context33.t0)) {\n                _context33.next = 49;\n                break;\n              }\n              return _context33.abrupt(\"return\", {\n                data: {\n                  session: null,\n                  redirectType: null\n                },\n                error: _context33.t0\n              });\n            case 49:\n              throw _context33.t0;\n            case 50:\n            case \"end\":\n              return _context33.stop();\n          }\n        }, _callee33, this, [[0, 45]]);\n      }));\n      function _getSessionFromURL(_x26) {\n        return _getSessionFromURL2.apply(this, arguments);\n      }\n      return _getSessionFromURL;\n    }()\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n  }, {\n    key: \"_isImplicitGrantFlow\",\n    value: function _isImplicitGrantFlow() {\n      var params = parseParametersFromURL(window.location.href);\n      return !!(isBrowser() && (params.access_token || params.error_description));\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n  }, {\n    key: \"_isPKCEFlow\",\n    value: function () {\n      var _isPKCEFlow2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34() {\n        var params, currentStorageContent;\n        return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n          while (1) switch (_context34.prev = _context34.next) {\n            case 0:\n              params = parseParametersFromURL(window.location.href);\n              _context34.next = 3;\n              return getItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n            case 3:\n              currentStorageContent = _context34.sent;\n              return _context34.abrupt(\"return\", !!(params.code && currentStorageContent));\n            case 5:\n            case \"end\":\n              return _context34.stop();\n          }\n        }, _callee34, this);\n      }));\n      function _isPKCEFlow() {\n        return _isPKCEFlow2.apply(this, arguments);\n      }\n      return _isPKCEFlow;\n    }()\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using others scope, no `SIGNED_OUT` event is fired!\n     */\n  }, {\n    key: \"signOut\",\n    value: function () {\n      var _signOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {\n        var _this9 = this;\n        var _ref14,\n          scope,\n          _args36 = arguments;\n        return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n          while (1) switch (_context36.prev = _context36.next) {\n            case 0:\n              _ref14 = _args36.length > 0 && _args36[0] !== undefined ? _args36[0] : {\n                scope: 'global'\n              }, scope = _ref14.scope;\n              _context36.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(result) {\n                  var _a, data, sessionError, accessToken, _yield$_this9$admin$s, error;\n                  return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n                    while (1) switch (_context35.prev = _context35.next) {\n                      case 0:\n                        data = result.data, sessionError = result.error;\n                        if (!sessionError) {\n                          _context35.next = 3;\n                          break;\n                        }\n                        return _context35.abrupt(\"return\", {\n                          error: sessionError\n                        });\n                      case 3:\n                        accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n                        if (!accessToken) {\n                          _context35.next = 12;\n                          break;\n                        }\n                        _context35.next = 7;\n                        return _this9.admin.signOut(accessToken, scope);\n                      case 7:\n                        _yield$_this9$admin$s = _context35.sent;\n                        error = _yield$_this9$admin$s.error;\n                        if (!error) {\n                          _context35.next = 12;\n                          break;\n                        }\n                        if (isAuthApiError(error) && (error.status === 404 || error.status === 401)) {\n                          _context35.next = 12;\n                          break;\n                        }\n                        return _context35.abrupt(\"return\", {\n                          error: error\n                        });\n                      case 12:\n                        if (!(scope !== 'others')) {\n                          _context35.next = 19;\n                          break;\n                        }\n                        _context35.next = 15;\n                        return _this9._removeSession();\n                      case 15:\n                        _context35.next = 17;\n                        return removeItemAsync(_this9.storage, \"\".concat(_this9.storageKey, \"-code-verifier\"));\n                      case 17:\n                        _context35.next = 19;\n                        return _this9._notifyAllSubscribers('SIGNED_OUT', null);\n                      case 19:\n                        return _context35.abrupt(\"return\", {\n                          error: null\n                        });\n                      case 20:\n                      case \"end\":\n                        return _context35.stop();\n                    }\n                  }, _callee35);\n                }));\n                return function (_x27) {\n                  return _ref15.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context36.abrupt(\"return\", _context36.sent);\n            case 4:\n            case \"end\":\n              return _context36.stop();\n          }\n        }, _callee36, this);\n      }));\n      function signOut() {\n        return _signOut.apply(this, arguments);\n      }\n      return signOut;\n    }()\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n  }, {\n    key: \"onAuthStateChange\",\n    value: function onAuthStateChange(callback) {\n      var _this10 = this;\n      var id = uuid();\n      var subscription = {\n        id: id,\n        callback: callback,\n        unsubscribe: function unsubscribe() {\n          _this10._debug('#unsubscribe()', 'state change callback with id removed', id);\n          _this10.stateChangeEmitters.delete(id);\n        }\n      };\n      this._debug('#onAuthStateChange()', 'registered callback with id', id);\n      this.stateChangeEmitters.set(id, subscription);\n      this._emitInitialSession(id);\n      return {\n        data: {\n          subscription: subscription\n        }\n      };\n    }\n  }, {\n    key: \"_emitInitialSession\",\n    value: function () {\n      var _emitInitialSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(id) {\n        var _this11 = this;\n        return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n          while (1) switch (_context38.prev = _context38.next) {\n            case 0:\n              _context38.next = 2;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(result) {\n                  var _a, _b, session, error;\n                  return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n                    while (1) switch (_context37.prev = _context37.next) {\n                      case 0:\n                        _context37.prev = 0;\n                        session = result.data.session, error = result.error;\n                        if (!error) {\n                          _context37.next = 4;\n                          break;\n                        }\n                        throw error;\n                      case 4:\n                        _context37.next = 6;\n                        return (_a = _this11.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n                      case 6:\n                        _this11._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n                        _context37.next = 15;\n                        break;\n                      case 9:\n                        _context37.prev = 9;\n                        _context37.t0 = _context37[\"catch\"](0);\n                        _context37.next = 13;\n                        return (_b = _this11.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                      case 13:\n                        _this11._debug('INITIAL_SESSION', 'callback id', id, 'error', _context37.t0);\n                        console.error(_context37.t0);\n                      case 15:\n                      case \"end\":\n                        return _context37.stop();\n                    }\n                  }, _callee37, null, [[0, 9]]);\n                }));\n                return function (_x29) {\n                  return _ref16.apply(this, arguments);\n                };\n              }());\n            case 2:\n              return _context38.abrupt(\"return\", _context38.sent);\n            case 3:\n            case \"end\":\n              return _context38.stop();\n          }\n        }, _callee38, this);\n      }));\n      function _emitInitialSession(_x28) {\n        return _emitInitialSession2.apply(this, arguments);\n      }\n      return _emitInitialSession;\n    }()\n    /**\n     * Sends a password reset request to an email address.\n     * This method supports the PKCE flow.\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n  }, {\n    key: \"resetPasswordForEmail\",\n    value: function () {\n      var _resetPasswordForEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(email) {\n        var options,\n          codeChallenge,\n          codeChallengeMethod,\n          codeVerifier,\n          _args39 = arguments;\n        return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n          while (1) switch (_context39.prev = _context39.next) {\n            case 0:\n              options = _args39.length > 1 && _args39[1] !== undefined ? _args39[1] : {};\n              codeChallenge = null;\n              codeChallengeMethod = null;\n              if (!(this.flowType === 'pkce')) {\n                _context39.next = 11;\n                break;\n              }\n              codeVerifier = generatePKCEVerifier();\n              _context39.next = 7;\n              return setItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"), codeVerifier);\n            case 7:\n              _context39.next = 9;\n              return generatePKCEChallenge(codeVerifier);\n            case 9:\n              codeChallenge = _context39.sent;\n              codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n            case 11:\n              _context39.prev = 11;\n              _context39.next = 14;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/recover\"), {\n                body: {\n                  email: email,\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod,\n                  gotrue_meta_security: {\n                    captcha_token: options.captchaToken\n                  }\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo\n              });\n            case 14:\n              return _context39.abrupt(\"return\", _context39.sent);\n            case 17:\n              _context39.prev = 17;\n              _context39.t0 = _context39[\"catch\"](11);\n              if (!isAuthError(_context39.t0)) {\n                _context39.next = 21;\n                break;\n              }\n              return _context39.abrupt(\"return\", {\n                data: null,\n                error: _context39.t0\n              });\n            case 21:\n              throw _context39.t0;\n            case 22:\n            case \"end\":\n              return _context39.stop();\n          }\n        }, _callee39, this, [[11, 17]]);\n      }));\n      function resetPasswordForEmail(_x30) {\n        return _resetPasswordForEmail.apply(this, arguments);\n      }\n      return resetPasswordForEmail;\n    }()\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n  }, {\n    key: \"_refreshAccessToken\",\n    value: function () {\n      var _refreshAccessToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41(refreshToken) {\n        var _this12 = this;\n        var debugName, startedAt;\n        return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n          while (1) switch (_context41.prev = _context41.next) {\n            case 0:\n              debugName = \"#_refreshAccessToken(\".concat(refreshToken.substring(0, 5), \"...)\");\n              this._debug(debugName, 'begin');\n              _context41.prev = 2;\n              startedAt = Date.now(); // will attempt to refresh the token with exponential backoff\n              _context41.next = 6;\n              return retryable( /*#__PURE__*/function () {\n                var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40(attempt) {\n                  return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n                    while (1) switch (_context40.prev = _context40.next) {\n                      case 0:\n                        _context40.next = 2;\n                        return sleep(attempt * 200);\n                      case 2:\n                        // 0, 200, 400, 800, ...\n                        _this12._debug(debugName, 'refreshing attempt', attempt);\n                        _context40.next = 5;\n                        return _request(_this12.fetch, 'POST', \"\".concat(_this12.url, \"/token?grant_type=refresh_token\"), {\n                          body: {\n                            refresh_token: refreshToken\n                          },\n                          headers: _this12.headers,\n                          xform: _sessionResponse\n                        });\n                      case 5:\n                        return _context40.abrupt(\"return\", _context40.sent);\n                      case 6:\n                      case \"end\":\n                        return _context40.stop();\n                    }\n                  }, _callee40);\n                }));\n                return function (_x32) {\n                  return _ref17.apply(this, arguments);\n                };\n              }(), function (attempt, _, result) {\n                return result && result.error && isAuthRetryableFetchError(result.error) &&\n                // retryable only if the request can be sent before the backoff overflows the tick duration\n                Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION;\n              });\n            case 6:\n              return _context41.abrupt(\"return\", _context41.sent);\n            case 9:\n              _context41.prev = 9;\n              _context41.t0 = _context41[\"catch\"](2);\n              this._debug(debugName, 'error', _context41.t0);\n              if (!isAuthError(_context41.t0)) {\n                _context41.next = 14;\n                break;\n              }\n              return _context41.abrupt(\"return\", {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error: _context41.t0\n              });\n            case 14:\n              throw _context41.t0;\n            case 15:\n              _context41.prev = 15;\n              this._debug(debugName, 'end');\n              return _context41.finish(15);\n            case 18:\n            case \"end\":\n              return _context41.stop();\n          }\n        }, _callee41, this, [[2, 9, 15, 18]]);\n      }));\n      function _refreshAccessToken(_x31) {\n        return _refreshAccessToken2.apply(this, arguments);\n      }\n      return _refreshAccessToken;\n    }()\n  }, {\n    key: \"_isValidSession\",\n    value: function _isValidSession(maybeSession) {\n      var isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n      return isValidSession;\n    }\n  }, {\n    key: \"_handleProviderSignIn\",\n    value: function () {\n      var _handleProviderSignIn2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42(provider, options) {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n          while (1) switch (_context42.prev = _context42.next) {\n            case 0:\n              _context42.next = 2;\n              return this._getUrlForProvider(provider, {\n                redirectTo: options.redirectTo,\n                scopes: options.scopes,\n                queryParams: options.queryParams\n              });\n            case 2:\n              url = _context42.sent;\n              this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n              // try to open on the browser\n              if (isBrowser() && !options.skipBrowserRedirect) {\n                window.location.assign(url);\n              }\n              return _context42.abrupt(\"return\", {\n                data: {\n                  provider: provider,\n                  url: url\n                },\n                error: null\n              });\n            case 6:\n            case \"end\":\n              return _context42.stop();\n          }\n        }, _callee42, this);\n      }));\n      function _handleProviderSignIn(_x33, _x34) {\n        return _handleProviderSignIn2.apply(this, arguments);\n      }\n      return _handleProviderSignIn;\n    }()\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n  }, {\n    key: \"_recoverAndRefresh\",\n    value: function () {\n      var _recoverAndRefresh2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43() {\n        var _a, debugName, currentSession, timeNow, expiresWithMargin, _yield$this$_callRefr3, error;\n        return _regeneratorRuntime().wrap(function _callee43$(_context43) {\n          while (1) switch (_context43.prev = _context43.next) {\n            case 0:\n              debugName = '#_recoverAndRefresh()';\n              this._debug(debugName, 'begin');\n              _context43.prev = 2;\n              _context43.next = 5;\n              return getItemAsync(this.storage, this.storageKey);\n            case 5:\n              currentSession = _context43.sent;\n              this._debug(debugName, 'session from storage', currentSession);\n              if (this._isValidSession(currentSession)) {\n                _context43.next = 13;\n                break;\n              }\n              this._debug(debugName, 'session is not valid');\n              if (!(currentSession !== null)) {\n                _context43.next = 12;\n                break;\n              }\n              _context43.next = 12;\n              return this._removeSession();\n            case 12:\n              return _context43.abrupt(\"return\");\n            case 13:\n              timeNow = Math.round(Date.now() / 1000);\n              expiresWithMargin = ((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN;\n              this._debug(debugName, \"session has\".concat(expiresWithMargin ? '' : ' not', \" expired with margin of \").concat(EXPIRY_MARGIN, \"s\"));\n              if (!expiresWithMargin) {\n                _context43.next = 30;\n                break;\n              }\n              if (!(this.autoRefreshToken && currentSession.refresh_token)) {\n                _context43.next = 28;\n                break;\n              }\n              _context43.next = 20;\n              return this._callRefreshToken(currentSession.refresh_token);\n            case 20:\n              _yield$this$_callRefr3 = _context43.sent;\n              error = _yield$this$_callRefr3.error;\n              if (!error) {\n                _context43.next = 28;\n                break;\n              }\n              console.error(error);\n              if (isAuthRetryableFetchError(error)) {\n                _context43.next = 28;\n                break;\n              }\n              this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n              _context43.next = 28;\n              return this._removeSession();\n            case 28:\n              _context43.next = 32;\n              break;\n            case 30:\n              _context43.next = 32;\n              return this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            case 32:\n              _context43.next = 39;\n              break;\n            case 34:\n              _context43.prev = 34;\n              _context43.t0 = _context43[\"catch\"](2);\n              this._debug(debugName, 'error', _context43.t0);\n              console.error(_context43.t0);\n              return _context43.abrupt(\"return\");\n            case 39:\n              _context43.prev = 39;\n              this._debug(debugName, 'end');\n              return _context43.finish(39);\n            case 42:\n            case \"end\":\n              return _context43.stop();\n          }\n        }, _callee43, this, [[2, 34, 39, 42]]);\n      }));\n      function _recoverAndRefresh() {\n        return _recoverAndRefresh2.apply(this, arguments);\n      }\n      return _recoverAndRefresh;\n    }()\n  }, {\n    key: \"_callRefreshToken\",\n    value: function () {\n      var _callRefreshToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee44(refreshToken) {\n        var _a, _b, debugName, _yield$this$_refreshA, data, error, result, _result;\n        return _regeneratorRuntime().wrap(function _callee44$(_context44) {\n          while (1) switch (_context44.prev = _context44.next) {\n            case 0:\n              if (refreshToken) {\n                _context44.next = 2;\n                break;\n              }\n              throw new AuthSessionMissingError();\n            case 2:\n              if (!this.refreshingDeferred) {\n                _context44.next = 4;\n                break;\n              }\n              return _context44.abrupt(\"return\", this.refreshingDeferred.promise);\n            case 4:\n              debugName = \"#_callRefreshToken(\".concat(refreshToken.substring(0, 5), \"...)\");\n              this._debug(debugName, 'begin');\n              _context44.prev = 6;\n              this.refreshingDeferred = new Deferred();\n              _context44.next = 10;\n              return this._refreshAccessToken(refreshToken);\n            case 10:\n              _yield$this$_refreshA = _context44.sent;\n              data = _yield$this$_refreshA.data;\n              error = _yield$this$_refreshA.error;\n              if (!error) {\n                _context44.next = 15;\n                break;\n              }\n              throw error;\n            case 15:\n              if (data.session) {\n                _context44.next = 17;\n                break;\n              }\n              throw new AuthSessionMissingError();\n            case 17:\n              _context44.next = 19;\n              return this._saveSession(data.session);\n            case 19:\n              _context44.next = 21;\n              return this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            case 21:\n              result = {\n                session: data.session,\n                error: null\n              };\n              this.refreshingDeferred.resolve(result);\n              return _context44.abrupt(\"return\", result);\n            case 26:\n              _context44.prev = 26;\n              _context44.t0 = _context44[\"catch\"](6);\n              this._debug(debugName, 'error', _context44.t0);\n              if (!isAuthError(_context44.t0)) {\n                _context44.next = 33;\n                break;\n              }\n              _result = {\n                session: null,\n                error: _context44.t0\n              };\n              (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(_result);\n              return _context44.abrupt(\"return\", _result);\n            case 33:\n              (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(_context44.t0);\n              throw _context44.t0;\n            case 35:\n              _context44.prev = 35;\n              this.refreshingDeferred = null;\n              this._debug(debugName, 'end');\n              return _context44.finish(35);\n            case 39:\n            case \"end\":\n              return _context44.stop();\n          }\n        }, _callee44, this, [[6, 26, 35, 39]]);\n      }));\n      function _callRefreshToken(_x35) {\n        return _callRefreshToken2.apply(this, arguments);\n      }\n      return _callRefreshToken;\n    }()\n  }, {\n    key: \"_notifyAllSubscribers\",\n    value: function () {\n      var _notifyAllSubscribers2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee46(event, session) {\n        var broadcast,\n          debugName,\n          errors,\n          promises,\n          i,\n          _args46 = arguments;\n        return _regeneratorRuntime().wrap(function _callee46$(_context46) {\n          while (1) switch (_context46.prev = _context46.next) {\n            case 0:\n              broadcast = _args46.length > 2 && _args46[2] !== undefined ? _args46[2] : true;\n              debugName = \"#_notifyAllSubscribers(\".concat(event, \")\");\n              this._debug(debugName, 'begin', session, \"broadcast = \".concat(broadcast));\n              _context46.prev = 3;\n              if (this.broadcastChannel && broadcast) {\n                this.broadcastChannel.postMessage({\n                  event: event,\n                  session: session\n                });\n              }\n              errors = [];\n              promises = Array.from(this.stateChangeEmitters.values()).map( /*#__PURE__*/function () {\n                var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee45(x) {\n                  return _regeneratorRuntime().wrap(function _callee45$(_context45) {\n                    while (1) switch (_context45.prev = _context45.next) {\n                      case 0:\n                        _context45.prev = 0;\n                        _context45.next = 3;\n                        return x.callback(event, session);\n                      case 3:\n                        _context45.next = 8;\n                        break;\n                      case 5:\n                        _context45.prev = 5;\n                        _context45.t0 = _context45[\"catch\"](0);\n                        errors.push(_context45.t0);\n                      case 8:\n                      case \"end\":\n                        return _context45.stop();\n                    }\n                  }, _callee45, null, [[0, 5]]);\n                }));\n                return function (_x38) {\n                  return _ref18.apply(this, arguments);\n                };\n              }());\n              _context46.next = 9;\n              return Promise.all(promises);\n            case 9:\n              if (!(errors.length > 0)) {\n                _context46.next = 12;\n                break;\n              }\n              for (i = 0; i < errors.length; i += 1) {\n                console.error(errors[i]);\n              }\n              throw errors[0];\n            case 12:\n              _context46.prev = 12;\n              this._debug(debugName, 'end');\n              return _context46.finish(12);\n            case 15:\n            case \"end\":\n              return _context46.stop();\n          }\n        }, _callee46, this, [[3,, 12, 15]]);\n      }));\n      function _notifyAllSubscribers(_x36, _x37) {\n        return _notifyAllSubscribers2.apply(this, arguments);\n      }\n      return _notifyAllSubscribers;\n    }()\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n  }, {\n    key: \"_saveSession\",\n    value: function () {\n      var _saveSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee47(session) {\n        return _regeneratorRuntime().wrap(function _callee47$(_context47) {\n          while (1) switch (_context47.prev = _context47.next) {\n            case 0:\n              this._debug('#_saveSession()', session);\n              if (!this.persistSession) {\n                this.inMemorySession = session;\n              }\n              if (!(this.persistSession && session.expires_at)) {\n                _context47.next = 5;\n                break;\n              }\n              _context47.next = 5;\n              return this._persistSession(session);\n            case 5:\n            case \"end\":\n              return _context47.stop();\n          }\n        }, _callee47, this);\n      }));\n      function _saveSession(_x39) {\n        return _saveSession2.apply(this, arguments);\n      }\n      return _saveSession;\n    }()\n  }, {\n    key: \"_persistSession\",\n    value: function _persistSession(currentSession) {\n      this._debug('#_persistSession()', currentSession);\n      return setItemAsync(this.storage, this.storageKey, currentSession);\n    }\n  }, {\n    key: \"_removeSession\",\n    value: function () {\n      var _removeSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee48() {\n        return _regeneratorRuntime().wrap(function _callee48$(_context48) {\n          while (1) switch (_context48.prev = _context48.next) {\n            case 0:\n              this._debug('#_removeSession()');\n              if (!this.persistSession) {\n                _context48.next = 6;\n                break;\n              }\n              _context48.next = 4;\n              return removeItemAsync(this.storage, this.storageKey);\n            case 4:\n              _context48.next = 7;\n              break;\n            case 6:\n              this.inMemorySession = null;\n            case 7:\n            case \"end\":\n              return _context48.stop();\n          }\n        }, _callee48, this);\n      }));\n      function _removeSession() {\n        return _removeSession2.apply(this, arguments);\n      }\n      return _removeSession;\n    }()\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n  }, {\n    key: \"_removeVisibilityChangedCallback\",\n    value: function _removeVisibilityChangedCallback() {\n      this._debug('#_removeVisibilityChangedCallback()');\n      var callback = this.visibilityChangedCallback;\n      this.visibilityChangedCallback = null;\n      try {\n        if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n          window.removeEventListener('visibilitychange', callback);\n        }\n      } catch (e) {\n        console.error('removing visibilitychange callback failed', e);\n      }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n  }, {\n    key: \"_startAutoRefresh\",\n    value: function () {\n      var _startAutoRefresh2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee50() {\n        var _this13 = this;\n        var ticker;\n        return _regeneratorRuntime().wrap(function _callee50$(_context50) {\n          while (1) switch (_context50.prev = _context50.next) {\n            case 0:\n              _context50.next = 2;\n              return this._stopAutoRefresh();\n            case 2:\n              this._debug('#_startAutoRefresh()');\n              ticker = setInterval(function () {\n                return _this13._autoRefreshTokenTick();\n              }, AUTO_REFRESH_TICK_DURATION);\n              this.autoRefreshTicker = ticker;\n              if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n                // ticker is a NodeJS Timeout object that has an `unref` method\n                // https://nodejs.org/api/timers.html#timeoutunref\n                // When auto refresh is used in NodeJS (like for testing) the\n                // `setInterval` is preventing the process from being marked as\n                // finished and tests run endlessly. This can be prevented by calling\n                // `unref()` on the returned object.\n                ticker.unref();\n                // @ts-ignore\n              } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n                // similar like for NodeJS, but with the Deno API\n                // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n                // @ts-ignore\n                Deno.unrefTimer(ticker);\n              }\n              // run the tick immediately, but in the next pass of the event loop so that\n              // #_initialize can be allowed to complete without recursively waiting on\n              // itself\n              setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee49() {\n                return _regeneratorRuntime().wrap(function _callee49$(_context49) {\n                  while (1) switch (_context49.prev = _context49.next) {\n                    case 0:\n                      _context49.next = 2;\n                      return _this13.initializePromise;\n                    case 2:\n                      _context49.next = 4;\n                      return _this13._autoRefreshTokenTick();\n                    case 4:\n                    case \"end\":\n                      return _context49.stop();\n                  }\n                }, _callee49);\n              })), 0);\n            case 7:\n            case \"end\":\n              return _context50.stop();\n          }\n        }, _callee50, this);\n      }));\n      function _startAutoRefresh() {\n        return _startAutoRefresh2.apply(this, arguments);\n      }\n      return _startAutoRefresh;\n    }()\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n  }, {\n    key: \"_stopAutoRefresh\",\n    value: function () {\n      var _stopAutoRefresh2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee51() {\n        var ticker;\n        return _regeneratorRuntime().wrap(function _callee51$(_context51) {\n          while (1) switch (_context51.prev = _context51.next) {\n            case 0:\n              this._debug('#_stopAutoRefresh()');\n              ticker = this.autoRefreshTicker;\n              this.autoRefreshTicker = null;\n              if (ticker) {\n                clearInterval(ticker);\n              }\n            case 4:\n            case \"end\":\n              return _context51.stop();\n          }\n        }, _callee51, this);\n      }));\n      function _stopAutoRefresh() {\n        return _stopAutoRefresh2.apply(this, arguments);\n      }\n      return _stopAutoRefresh;\n    }()\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n  }, {\n    key: \"startAutoRefresh\",\n    value: function () {\n      var _startAutoRefresh3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee52() {\n        return _regeneratorRuntime().wrap(function _callee52$(_context52) {\n          while (1) switch (_context52.prev = _context52.next) {\n            case 0:\n              this._removeVisibilityChangedCallback();\n              _context52.next = 3;\n              return this._startAutoRefresh();\n            case 3:\n            case \"end\":\n              return _context52.stop();\n          }\n        }, _callee52, this);\n      }));\n      function startAutoRefresh() {\n        return _startAutoRefresh3.apply(this, arguments);\n      }\n      return startAutoRefresh;\n    }()\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n  }, {\n    key: \"stopAutoRefresh\",\n    value: function () {\n      var _stopAutoRefresh3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee53() {\n        return _regeneratorRuntime().wrap(function _callee53$(_context53) {\n          while (1) switch (_context53.prev = _context53.next) {\n            case 0:\n              this._removeVisibilityChangedCallback();\n              _context53.next = 3;\n              return this._stopAutoRefresh();\n            case 3:\n            case \"end\":\n              return _context53.stop();\n          }\n        }, _callee53, this);\n      }));\n      function stopAutoRefresh() {\n        return _stopAutoRefresh3.apply(this, arguments);\n      }\n      return stopAutoRefresh;\n    }()\n    /**\n     * Runs the auto refresh token tick.\n     */\n  }, {\n    key: \"_autoRefreshTokenTick\",\n    value: function () {\n      var _autoRefreshTokenTick2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee55() {\n        var _this14 = this;\n        var now;\n        return _regeneratorRuntime().wrap(function _callee55$(_context55) {\n          while (1) switch (_context55.prev = _context55.next) {\n            case 0:\n              this._debug('#_autoRefreshTokenTick()', 'begin');\n              _context55.prev = 1;\n              now = Date.now();\n              _context55.prev = 3;\n              _context55.next = 6;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee54(result) {\n                  var session, expiresInTicks;\n                  return _regeneratorRuntime().wrap(function _callee54$(_context54) {\n                    while (1) switch (_context54.prev = _context54.next) {\n                      case 0:\n                        session = result.data.session;\n                        if (!(!session || !session.refresh_token || !session.expires_at)) {\n                          _context54.next = 4;\n                          break;\n                        }\n                        _this14._debug('#_autoRefreshTokenTick()', 'no session');\n                        return _context54.abrupt(\"return\");\n                      case 4:\n                        // session will expire in this many ticks (or has already expired if <= 0)\n                        expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION);\n                        _this14._debug('#_autoRefreshTokenTick()', \"access token expires in \".concat(expiresInTicks, \" ticks, a tick lasts \").concat(AUTO_REFRESH_TICK_DURATION, \"ms, refresh threshold is \").concat(AUTO_REFRESH_TICK_THRESHOLD, \" ticks\"));\n                        if (!(expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD)) {\n                          _context54.next = 9;\n                          break;\n                        }\n                        _context54.next = 9;\n                        return _this14._callRefreshToken(session.refresh_token);\n                      case 9:\n                      case \"end\":\n                        return _context54.stop();\n                    }\n                  }, _callee54);\n                }));\n                return function (_x40) {\n                  return _ref20.apply(this, arguments);\n                };\n              }());\n            case 6:\n              return _context55.abrupt(\"return\", _context55.sent);\n            case 9:\n              _context55.prev = 9;\n              _context55.t0 = _context55[\"catch\"](3);\n              console.error('Auto refresh tick failed with error. This is likely a transient error.', _context55.t0);\n            case 12:\n              _context55.prev = 12;\n              this._debug('#_autoRefreshTokenTick()', 'end');\n              return _context55.finish(12);\n            case 15:\n            case \"end\":\n              return _context55.stop();\n          }\n        }, _callee55, this, [[1,, 12, 15], [3, 9]]);\n      }));\n      function _autoRefreshTokenTick() {\n        return _autoRefreshTokenTick2.apply(this, arguments);\n      }\n      return _autoRefreshTokenTick;\n    }()\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n  }, {\n    key: \"_handleVisibilityChange\",\n    value: function () {\n      var _handleVisibilityChange2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee57() {\n        var _this15 = this;\n        return _regeneratorRuntime().wrap(function _callee57$(_context57) {\n          while (1) switch (_context57.prev = _context57.next) {\n            case 0:\n              this._debug('#_handleVisibilityChange()');\n              if (!(!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener))) {\n                _context57.next = 4;\n                break;\n              }\n              if (this.autoRefreshToken) {\n                // in non-browser environments the refresh token ticker runs always\n                this.startAutoRefresh();\n              }\n              return _context57.abrupt(\"return\", false);\n            case 4:\n              _context57.prev = 4;\n              this.visibilityChangedCallback = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee56() {\n                return _regeneratorRuntime().wrap(function _callee56$(_context56) {\n                  while (1) switch (_context56.prev = _context56.next) {\n                    case 0:\n                      _context56.next = 2;\n                      return _this15._onVisibilityChanged(false);\n                    case 2:\n                      return _context56.abrupt(\"return\", _context56.sent);\n                    case 3:\n                    case \"end\":\n                      return _context56.stop();\n                  }\n                }, _callee56);\n              }));\n              window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n              // now immediately call the visbility changed callback to setup with the\n              // current visbility state\n              _context57.next = 9;\n              return this._onVisibilityChanged(true);\n            case 9:\n              _context57.next = 14;\n              break;\n            case 11:\n              _context57.prev = 11;\n              _context57.t0 = _context57[\"catch\"](4);\n              console.error('_handleVisibilityChange', _context57.t0);\n            case 14:\n            case \"end\":\n              return _context57.stop();\n          }\n        }, _callee57, this, [[4, 11]]);\n      }));\n      function _handleVisibilityChange() {\n        return _handleVisibilityChange2.apply(this, arguments);\n      }\n      return _handleVisibilityChange;\n    }()\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n  }, {\n    key: \"_onVisibilityChanged\",\n    value: function () {\n      var _onVisibilityChanged2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee59(isInitial) {\n        var _this16 = this;\n        return _regeneratorRuntime().wrap(function _callee59$(_context59) {\n          while (1) switch (_context59.prev = _context59.next) {\n            case 0:\n              this._debug(\"#_onVisibilityChanged(\".concat(isInitial, \")\"), 'visibilityState', document.visibilityState);\n              if (document.visibilityState === 'visible') {\n                // to avoid recursively depending on #_initialize(), run the visibility\n                // changed callback in the next event loop tick\n                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee58() {\n                  return _regeneratorRuntime().wrap(function _callee58$(_context58) {\n                    while (1) switch (_context58.prev = _context58.next) {\n                      case 0:\n                        if (isInitial) {\n                          _context58.next = 6;\n                          break;\n                        }\n                        _context58.next = 3;\n                        return _this16.initializePromise;\n                      case 3:\n                        _context58.next = 5;\n                        return _this16._recoverAndRefresh();\n                      case 5:\n                        _this16._debug('#_onVisibilityChanged()', 'finished waiting for initialize, _recoverAndRefresh');\n                      case 6:\n                        if (_this16.autoRefreshToken) {\n                          // in browser environments the refresh token ticker runs only on focused tabs\n                          // which prevents race conditions\n                          _this16._startAutoRefresh();\n                        }\n                      case 7:\n                      case \"end\":\n                        return _context58.stop();\n                    }\n                  }, _callee58);\n                })), 0);\n              } else if (document.visibilityState === 'hidden') {\n                if (this.autoRefreshToken) {\n                  this._stopAutoRefresh();\n                }\n              }\n            case 2:\n            case \"end\":\n              return _context59.stop();\n          }\n        }, _callee59, this);\n      }));\n      function _onVisibilityChanged(_x41) {\n        return _onVisibilityChanged2.apply(this, arguments);\n      }\n      return _onVisibilityChanged;\n    }()\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n  }, {\n    key: \"_getUrlForProvider\",\n    value: function () {\n      var _getUrlForProvider2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee60(provider, options) {\n        var urlParams, codeVerifier, codeChallenge, codeChallengeMethod, flowParams, query;\n        return _regeneratorRuntime().wrap(function _callee60$(_context60) {\n          while (1) switch (_context60.prev = _context60.next) {\n            case 0:\n              urlParams = [\"provider=\".concat(encodeURIComponent(provider))];\n              if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n                urlParams.push(\"redirect_to=\".concat(encodeURIComponent(options.redirectTo)));\n              }\n              if (options === null || options === void 0 ? void 0 : options.scopes) {\n                urlParams.push(\"scopes=\".concat(encodeURIComponent(options.scopes)));\n              }\n              if (!(this.flowType === 'pkce')) {\n                _context60.next = 14;\n                break;\n              }\n              codeVerifier = generatePKCEVerifier();\n              _context60.next = 7;\n              return setItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"), codeVerifier);\n            case 7:\n              _context60.next = 9;\n              return generatePKCEChallenge(codeVerifier);\n            case 9:\n              codeChallenge = _context60.sent;\n              codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n              this._debug('PKCE', 'code verifier', \"\".concat(codeVerifier.substring(0, 5), \"...\"), 'code challenge', codeChallenge, 'method', codeChallengeMethod);\n              flowParams = new URLSearchParams({\n                code_challenge: \"\".concat(encodeURIComponent(codeChallenge)),\n                code_challenge_method: \"\".concat(encodeURIComponent(codeChallengeMethod))\n              });\n              urlParams.push(flowParams.toString());\n            case 14:\n              if (options === null || options === void 0 ? void 0 : options.queryParams) {\n                query = new URLSearchParams(options.queryParams);\n                urlParams.push(query.toString());\n              }\n              return _context60.abrupt(\"return\", \"\".concat(this.url, \"/authorize?\").concat(urlParams.join('&')));\n            case 16:\n            case \"end\":\n              return _context60.stop();\n          }\n        }, _callee60, this);\n      }));\n      function _getUrlForProvider(_x42, _x43) {\n        return _getUrlForProvider2.apply(this, arguments);\n      }\n      return _getUrlForProvider;\n    }()\n  }, {\n    key: \"_unenroll\",\n    value: function () {\n      var _unenroll2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee62(params) {\n        var _this17 = this;\n        return _regeneratorRuntime().wrap(function _callee62$(_context62) {\n          while (1) switch (_context62.prev = _context62.next) {\n            case 0:\n              _context62.prev = 0;\n              _context62.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee61(result) {\n                  var _a, sessionData, sessionError;\n                  return _regeneratorRuntime().wrap(function _callee61$(_context61) {\n                    while (1) switch (_context61.prev = _context61.next) {\n                      case 0:\n                        sessionData = result.data, sessionError = result.error;\n                        if (!sessionError) {\n                          _context61.next = 3;\n                          break;\n                        }\n                        return _context61.abrupt(\"return\", {\n                          data: null,\n                          error: sessionError\n                        });\n                      case 3:\n                        _context61.next = 5;\n                        return _request(_this17.fetch, 'DELETE', \"\".concat(_this17.url, \"/factors/\").concat(params.factorId), {\n                          headers: _this17.headers,\n                          jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                        });\n                      case 5:\n                        return _context61.abrupt(\"return\", _context61.sent);\n                      case 6:\n                      case \"end\":\n                        return _context61.stop();\n                    }\n                  }, _callee61);\n                }));\n                return function (_x45) {\n                  return _ref23.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context62.abrupt(\"return\", _context62.sent);\n            case 6:\n              _context62.prev = 6;\n              _context62.t0 = _context62[\"catch\"](0);\n              if (!isAuthError(_context62.t0)) {\n                _context62.next = 10;\n                break;\n              }\n              return _context62.abrupt(\"return\", {\n                data: null,\n                error: _context62.t0\n              });\n            case 10:\n              throw _context62.t0;\n            case 11:\n            case \"end\":\n              return _context62.stop();\n          }\n        }, _callee62, this, [[0, 6]]);\n      }));\n      function _unenroll(_x44) {\n        return _unenroll2.apply(this, arguments);\n      }\n      return _unenroll;\n    }()\n    /**\n     * {@see GoTrueMFAApi#enroll}\n     */\n  }, {\n    key: \"_enroll\",\n    value: function () {\n      var _enroll2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee64(params) {\n        var _this18 = this;\n        return _regeneratorRuntime().wrap(function _callee64$(_context64) {\n          while (1) switch (_context64.prev = _context64.next) {\n            case 0:\n              _context64.prev = 0;\n              _context64.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee63(result) {\n                  var _a, _b, sessionData, sessionError, _yield$_request9, data, error;\n                  return _regeneratorRuntime().wrap(function _callee63$(_context63) {\n                    while (1) switch (_context63.prev = _context63.next) {\n                      case 0:\n                        sessionData = result.data, sessionError = result.error;\n                        if (!sessionError) {\n                          _context63.next = 3;\n                          break;\n                        }\n                        return _context63.abrupt(\"return\", {\n                          data: null,\n                          error: sessionError\n                        });\n                      case 3:\n                        _context63.next = 5;\n                        return _request(_this18.fetch, 'POST', \"\".concat(_this18.url, \"/factors\"), {\n                          body: {\n                            friendly_name: params.friendlyName,\n                            factor_type: params.factorType,\n                            issuer: params.issuer\n                          },\n                          headers: _this18.headers,\n                          jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                        });\n                      case 5:\n                        _yield$_request9 = _context63.sent;\n                        data = _yield$_request9.data;\n                        error = _yield$_request9.error;\n                        if (!error) {\n                          _context63.next = 10;\n                          break;\n                        }\n                        return _context63.abrupt(\"return\", {\n                          data: null,\n                          error: error\n                        });\n                      case 10:\n                        if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {\n                          data.totp.qr_code = \"data:image/svg+xml;utf-8,\".concat(data.totp.qr_code);\n                        }\n                        return _context63.abrupt(\"return\", {\n                          data: data,\n                          error: null\n                        });\n                      case 12:\n                      case \"end\":\n                        return _context63.stop();\n                    }\n                  }, _callee63);\n                }));\n                return function (_x47) {\n                  return _ref24.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context64.abrupt(\"return\", _context64.sent);\n            case 6:\n              _context64.prev = 6;\n              _context64.t0 = _context64[\"catch\"](0);\n              if (!isAuthError(_context64.t0)) {\n                _context64.next = 10;\n                break;\n              }\n              return _context64.abrupt(\"return\", {\n                data: null,\n                error: _context64.t0\n              });\n            case 10:\n              throw _context64.t0;\n            case 11:\n            case \"end\":\n              return _context64.stop();\n          }\n        }, _callee64, this, [[0, 6]]);\n      }));\n      function _enroll(_x46) {\n        return _enroll2.apply(this, arguments);\n      }\n      return _enroll;\n    }()\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n  }, {\n    key: \"_verify\",\n    value: function () {\n      var _verify2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee66(params) {\n        var _this19 = this;\n        return _regeneratorRuntime().wrap(function _callee66$(_context66) {\n          while (1) switch (_context66.prev = _context66.next) {\n            case 0:\n              _context66.prev = 0;\n              _context66.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee65(result) {\n                  var _a, sessionData, sessionError, _yield$_request10, data, error;\n                  return _regeneratorRuntime().wrap(function _callee65$(_context65) {\n                    while (1) switch (_context65.prev = _context65.next) {\n                      case 0:\n                        sessionData = result.data, sessionError = result.error;\n                        if (!sessionError) {\n                          _context65.next = 3;\n                          break;\n                        }\n                        return _context65.abrupt(\"return\", {\n                          data: null,\n                          error: sessionError\n                        });\n                      case 3:\n                        _context65.next = 5;\n                        return _request(_this19.fetch, 'POST', \"\".concat(_this19.url, \"/factors/\").concat(params.factorId, \"/verify\"), {\n                          body: {\n                            code: params.code,\n                            challenge_id: params.challengeId\n                          },\n                          headers: _this19.headers,\n                          jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                        });\n                      case 5:\n                        _yield$_request10 = _context65.sent;\n                        data = _yield$_request10.data;\n                        error = _yield$_request10.error;\n                        if (!error) {\n                          _context65.next = 10;\n                          break;\n                        }\n                        return _context65.abrupt(\"return\", {\n                          data: null,\n                          error: error\n                        });\n                      case 10:\n                        _context65.next = 12;\n                        return _this19._saveSession(Object.assign({\n                          expires_at: Math.round(Date.now() / 1000) + data.expires_in\n                        }, data));\n                      case 12:\n                        _context65.next = 14;\n                        return _this19._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                      case 14:\n                        return _context65.abrupt(\"return\", {\n                          data: data,\n                          error: error\n                        });\n                      case 15:\n                      case \"end\":\n                        return _context65.stop();\n                    }\n                  }, _callee65);\n                }));\n                return function (_x49) {\n                  return _ref25.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context66.abrupt(\"return\", _context66.sent);\n            case 6:\n              _context66.prev = 6;\n              _context66.t0 = _context66[\"catch\"](0);\n              if (!isAuthError(_context66.t0)) {\n                _context66.next = 10;\n                break;\n              }\n              return _context66.abrupt(\"return\", {\n                data: null,\n                error: _context66.t0\n              });\n            case 10:\n              throw _context66.t0;\n            case 11:\n            case \"end\":\n              return _context66.stop();\n          }\n        }, _callee66, this, [[0, 6]]);\n      }));\n      function _verify(_x48) {\n        return _verify2.apply(this, arguments);\n      }\n      return _verify;\n    }()\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n  }, {\n    key: \"_challenge\",\n    value: function () {\n      var _challenge2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee68(params) {\n        var _this20 = this;\n        return _regeneratorRuntime().wrap(function _callee68$(_context68) {\n          while (1) switch (_context68.prev = _context68.next) {\n            case 0:\n              _context68.prev = 0;\n              _context68.next = 3;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee67(result) {\n                  var _a, sessionData, sessionError;\n                  return _regeneratorRuntime().wrap(function _callee67$(_context67) {\n                    while (1) switch (_context67.prev = _context67.next) {\n                      case 0:\n                        sessionData = result.data, sessionError = result.error;\n                        if (!sessionError) {\n                          _context67.next = 3;\n                          break;\n                        }\n                        return _context67.abrupt(\"return\", {\n                          data: null,\n                          error: sessionError\n                        });\n                      case 3:\n                        _context67.next = 5;\n                        return _request(_this20.fetch, 'POST', \"\".concat(_this20.url, \"/factors/\").concat(params.factorId, \"/challenge\"), {\n                          headers: _this20.headers,\n                          jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                        });\n                      case 5:\n                        return _context67.abrupt(\"return\", _context67.sent);\n                      case 6:\n                      case \"end\":\n                        return _context67.stop();\n                    }\n                  }, _callee67);\n                }));\n                return function (_x51) {\n                  return _ref26.apply(this, arguments);\n                };\n              }());\n            case 3:\n              return _context68.abrupt(\"return\", _context68.sent);\n            case 6:\n              _context68.prev = 6;\n              _context68.t0 = _context68[\"catch\"](0);\n              if (!isAuthError(_context68.t0)) {\n                _context68.next = 10;\n                break;\n              }\n              return _context68.abrupt(\"return\", {\n                data: null,\n                error: _context68.t0\n              });\n            case 10:\n              throw _context68.t0;\n            case 11:\n            case \"end\":\n              return _context68.stop();\n          }\n        }, _callee68, this, [[0, 6]]);\n      }));\n      function _challenge(_x50) {\n        return _challenge2.apply(this, arguments);\n      }\n      return _challenge;\n    }()\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n  }, {\n    key: \"_challengeAndVerify\",\n    value: function () {\n      var _challengeAndVerify2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee69(params) {\n        var _yield$this$_challeng, challengeData, challengeError;\n        return _regeneratorRuntime().wrap(function _callee69$(_context69) {\n          while (1) switch (_context69.prev = _context69.next) {\n            case 0:\n              _context69.next = 2;\n              return this._challenge({\n                factorId: params.factorId\n              });\n            case 2:\n              _yield$this$_challeng = _context69.sent;\n              challengeData = _yield$this$_challeng.data;\n              challengeError = _yield$this$_challeng.error;\n              if (!challengeError) {\n                _context69.next = 7;\n                break;\n              }\n              return _context69.abrupt(\"return\", {\n                data: null,\n                error: challengeError\n              });\n            case 7:\n              _context69.next = 9;\n              return this._verify({\n                factorId: params.factorId,\n                challengeId: challengeData.id,\n                code: params.code\n              });\n            case 9:\n              return _context69.abrupt(\"return\", _context69.sent);\n            case 10:\n            case \"end\":\n              return _context69.stop();\n          }\n        }, _callee69, this);\n      }));\n      function _challengeAndVerify(_x52) {\n        return _challengeAndVerify2.apply(this, arguments);\n      }\n      return _challengeAndVerify;\n    }()\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n  }, {\n    key: \"_listFactors\",\n    value: function () {\n      var _listFactors2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee70() {\n        var _yield$this$getUser3, user, userError, factors, totp;\n        return _regeneratorRuntime().wrap(function _callee70$(_context70) {\n          while (1) switch (_context70.prev = _context70.next) {\n            case 0:\n              _context70.next = 2;\n              return this.getUser();\n            case 2:\n              _yield$this$getUser3 = _context70.sent;\n              user = _yield$this$getUser3.data.user;\n              userError = _yield$this$getUser3.error;\n              if (!userError) {\n                _context70.next = 7;\n                break;\n              }\n              return _context70.abrupt(\"return\", {\n                data: null,\n                error: userError\n              });\n            case 7:\n              factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n              totp = factors.filter(function (factor) {\n                return factor.factor_type === 'totp' && factor.status === 'verified';\n              });\n              return _context70.abrupt(\"return\", {\n                data: {\n                  all: factors,\n                  totp: totp\n                },\n                error: null\n              });\n            case 10:\n            case \"end\":\n              return _context70.stop();\n          }\n        }, _callee70, this);\n      }));\n      function _listFactors() {\n        return _listFactors2.apply(this, arguments);\n      }\n      return _listFactors;\n    }()\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n  }, {\n    key: \"_getAuthenticatorAssuranceLevel\",\n    value: function () {\n      var _getAuthenticatorAssuranceLevel2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee72() {\n        var _this21 = this;\n        return _regeneratorRuntime().wrap(function _callee72$(_context72) {\n          while (1) switch (_context72.prev = _context72.next) {\n            case 0:\n              _context72.next = 2;\n              return this._useSession( /*#__PURE__*/function () {\n                var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee71(result) {\n                  var _a, _b, session, sessionError, payload, currentLevel, nextLevel, verifiedFactors, currentAuthenticationMethods;\n                  return _regeneratorRuntime().wrap(function _callee71$(_context71) {\n                    while (1) switch (_context71.prev = _context71.next) {\n                      case 0:\n                        session = result.data.session, sessionError = result.error;\n                        if (!sessionError) {\n                          _context71.next = 3;\n                          break;\n                        }\n                        return _context71.abrupt(\"return\", {\n                          data: null,\n                          error: sessionError\n                        });\n                      case 3:\n                        if (session) {\n                          _context71.next = 5;\n                          break;\n                        }\n                        return _context71.abrupt(\"return\", {\n                          data: {\n                            currentLevel: null,\n                            nextLevel: null,\n                            currentAuthenticationMethods: []\n                          },\n                          error: null\n                        });\n                      case 5:\n                        payload = _this21._decodeJWT(session.access_token);\n                        currentLevel = null;\n                        if (payload.aal) {\n                          currentLevel = payload.aal;\n                        }\n                        nextLevel = currentLevel;\n                        verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(function (factor) {\n                          return factor.status === 'verified';\n                        })) !== null && _b !== void 0 ? _b : [];\n                        if (verifiedFactors.length > 0) {\n                          nextLevel = 'aal2';\n                        }\n                        currentAuthenticationMethods = payload.amr || [];\n                        return _context71.abrupt(\"return\", {\n                          data: {\n                            currentLevel: currentLevel,\n                            nextLevel: nextLevel,\n                            currentAuthenticationMethods: currentAuthenticationMethods\n                          },\n                          error: null\n                        });\n                      case 13:\n                      case \"end\":\n                        return _context71.stop();\n                    }\n                  }, _callee71);\n                }));\n                return function (_x53) {\n                  return _ref27.apply(this, arguments);\n                };\n              }());\n            case 2:\n              return _context72.abrupt(\"return\", _context72.sent);\n            case 3:\n            case \"end\":\n              return _context72.stop();\n          }\n        }, _callee72, this);\n      }));\n      function _getAuthenticatorAssuranceLevel() {\n        return _getAuthenticatorAssuranceLevel2.apply(this, arguments);\n      }\n      return _getAuthenticatorAssuranceLevel;\n    }()\n  }]);\n  return GoTrueClient;\n}();\nexport { GoTrueClient as default };\nGoTrueClient.nextInstanceID = 0;","map":{"version":3,"names":["GoTrueAdminApi","DEFAULT_HEADERS","EXPIRY_MARGIN","GOTRUE_URL","STORAGE_KEY","AuthImplicitGrantRedirectError","AuthPKCEGrantCodeExchangeError","AuthInvalidCredentialsError","AuthSessionMissingError","AuthInvalidTokenResponseError","AuthUnknownError","isAuthApiError","isAuthError","isAuthRetryableFetchError","_request","_sessionResponse","_userResponse","_ssoResponse","decodeJWTPayload","Deferred","getItemAsync","isBrowser","removeItemAsync","resolveFetch","setItemAsync","uuid","retryable","sleep","generatePKCEVerifier","generatePKCEChallenge","supportsLocalStorage","stackGuard","isInStackGuard","stackGuardsSupported","parseParametersFromURL","localStorageAdapter","polyfillGlobalThis","version","DEFAULT_OPTIONS","url","storageKey","autoRefreshToken","persistSession","detectSessionInUrl","headers","flowType","debug","AUTO_REFRESH_TICK_DURATION","AUTO_REFRESH_TICK_THRESHOLD","lockNoOp","_x","_x2","_x3","_lockNoOp","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee73","name","acquireTimeout","fn","wrap","_callee73$","_context73","prev","next","abrupt","sent","stop","GoTrueClient","options","_this","_classCallCheck","stateChangeEmitters","Map","autoRefreshTicker","visibilityChangedCallback","refreshingDeferred","initializePromise","broadcastChannel","instanceID","nextInstanceID","console","warn","settings","Object","assign","logDebugMessages","inMemorySession","storage","admin","fetch","lock","mfa","verify","_verify","bind","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","listFactors","_listFactors","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","globalThis","BroadcastChannel","e","error","_a","addEventListener","_ref","_callee","event","_callee$","_context","_debug","_notifyAllSubscribers","data","session","_x4","initialize","_createClass","key","value","_console","_len","length","args","Array","_key","log","concat","Date","toISOString","_initialize","_initialize2","_callee5","_this2","_callee5$","_context5","Error","_acquireLock","_callee4","_callee4$","_context4","_callee3","isPKCEFlow","_yield$_this2$_getSes","redirectType","_callee3$","_context3","_isPKCEFlow","t0","_isImplicitGrantFlow","_getSessionFromURL","_removeSession","_saveSession","setTimeout","_callee2","_callee2$","_context2","_recoverAndRefresh","t1","_handleVisibilityChange","finish","_signUp","_callee6","credentials","_b","_c","res","email","password","codeChallenge","codeChallengeMethod","codeVerifier","phone","_password","_options","_res","user","_callee6$","_context6","redirectTo","emailRedirectTo","body","gotrue_meta_security","captcha_token","captchaToken","code_challenge","code_challenge_method","xform","channel","signUp","_x5","_signInWithPassword","_callee7","_password2","_options2","_res2","_callee7$","_context7","signInWithPassword","_x6","_signInWithOAuth","_callee8","_d","_callee8$","_context8","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","signInWithOAuth","_x7","_exchangeCodeForSession","_callee9","authCode","_yield$_request","_callee9$","_context9","auth_code","code_verifier","exchangeCodeForSession","_x8","_signInWithIdToken","_callee10","token","access_token","nonce","_callee10$","_context10","id_token","signInWithIdToken","_x9","_signInWithOtp","_callee11","_e","_yield$_request2","_options3","_yield$_request3","_error","_callee11$","_context11","create_user","shouldCreateUser","messageId","message_id","signInWithOtp","_x10","_verifyOtp","_callee12","params","_yield$_request4","_callee12$","_context12","type","undefined","verifyOtp","_x11","_signInWithSSO","_callee13","_callee13$","_context13","provider_id","providerId","domain","redirect_to","skip_http_redirect","signInWithSSO","_x12","_reauthenticate","_callee15","_this3","_callee15$","_context15","_useSession","_ref5","_callee14","result","sessionError","_yield$_request5","_callee14$","_context14","jwt","_x13","reauthenticate","_resend","_callee16","endpoint","_yield$_request6","_type","_options4","_yield$_request7","_error2","_callee16$","_context16","resend","_x14","_getSession","_callee18","_callee18$","_context18","_ref6","_callee17","_callee17$","_context17","_x15","getSession","_acquireLock2","_callee21","_this4","_callee21$","_context21","_callee20","_callee20$","_context20","_callee19","_callee19$","_context19","_x16","_x17","_useSession2","_callee24","_this5","_callee24$","_context24","__loadSession","_callee23","_callee23$","_context23","_callee22","_callee22$","_context22","_x18","_loadSession","_callee25","currentSession","maybeSession","hasExpired","_yield$this$_callRefr","_callee25$","_context25","stack","_isValidSession","expires_at","now","_callRefreshToken","refresh_token","_getUser","_callee27","_this6","_callee27$","_context27","_ref11","_callee26","_callee26$","_context26","_x20","getUser","_x19","_updateUser","_callee29","attributes","_this7","_args29","_callee29$","_context29","_ref12","_callee28","sessionData","_yield$_request8","userError","_callee28$","_context28","_x22","updateUser","_x21","_decodeJWT","_setSession","_callee30","timeNow","expiresAt","payload","_yield$this$_callRefr2","refreshedSession","_yield$this$getUser","_error3","_callee30$","_context30","exp","token_type","expires_in","setSession","_x23","_refreshSession","_callee32","_this8","_callee32$","_context32","_ref13","_callee31","_error4","_yield$_this8$_callRe","_callee31$","_context31","_x25","refreshSession","_x24","_getSessionFromURL2","_callee33","_yield$this$exchangeC","_data","_error5","provider_token","provider_refresh_token","expiresIn","_yield$this$getUser2","_callee33$","_context33","window","location","href","code","URL","searchParams","delete","history","replaceState","state","toString","error_description","error_code","Math","round","parseInt","hash","_x26","_isPKCEFlow2","_callee34","currentStorageContent","_callee34$","_context34","_signOut","_callee36","_this9","_ref14","scope","_args36","_callee36$","_context36","_ref15","_callee35","accessToken","_yield$_this9$admin$s","_callee35$","_context35","signOut","status","_x27","onAuthStateChange","callback","_this10","id","subscription","unsubscribe","set","_emitInitialSession","_emitInitialSession2","_callee38","_this11","_callee38$","_context38","_ref16","_callee37","_callee37$","_context37","get","_x29","_x28","_resetPasswordForEmail","_callee39","_args39","_callee39$","_context39","resetPasswordForEmail","_x30","_refreshAccessToken2","_callee41","refreshToken","_this12","debugName","startedAt","_callee41$","_context41","substring","_ref17","_callee40","attempt","_callee40$","_context40","_x32","_","_refreshAccessToken","_x31","isValidSession","_handleProviderSignIn2","_callee42","_callee42$","_context42","_getUrlForProvider","_x33","_x34","_recoverAndRefresh2","_callee43","expiresWithMargin","_yield$this$_callRefr3","_callee43$","_context43","Infinity","_callRefreshToken2","_callee44","_yield$this$_refreshA","_result","_callee44$","_context44","promise","resolve","reject","_x35","_notifyAllSubscribers2","_callee46","broadcast","errors","promises","i","_args46","_callee46$","_context46","postMessage","from","values","map","_ref18","_callee45","x","_callee45$","_context45","push","_x38","Promise","all","_x36","_x37","_saveSession2","_callee47","_callee47$","_context47","_persistSession","_x39","_removeSession2","_callee48","_callee48$","_context48","_removeVisibilityChangedCallback","removeEventListener","_startAutoRefresh2","_callee50","_this13","ticker","_callee50$","_context50","_stopAutoRefresh","setInterval","_autoRefreshTokenTick","unref","Deno","unrefTimer","_callee49","_callee49$","_context49","_startAutoRefresh","_stopAutoRefresh2","_callee51","_callee51$","_context51","clearInterval","_startAutoRefresh3","_callee52","_callee52$","_context52","startAutoRefresh","_stopAutoRefresh3","_callee53","_callee53$","_context53","stopAutoRefresh","_autoRefreshTokenTick2","_callee55","_this14","_callee55$","_context55","_ref20","_callee54","expiresInTicks","_callee54$","_context54","floor","_x40","_handleVisibilityChange2","_callee57","_this15","_callee57$","_context57","_callee56","_callee56$","_context56","_onVisibilityChanged","_onVisibilityChanged2","_callee59","isInitial","_this16","_callee59$","_context59","document","visibilityState","_callee58","_callee58$","_context58","_x41","_getUrlForProvider2","_callee60","urlParams","flowParams","query","_callee60$","_context60","encodeURIComponent","URLSearchParams","join","_x42","_x43","_unenroll2","_callee62","_this17","_callee62$","_context62","_ref23","_callee61","_callee61$","_context61","factorId","_x45","_x44","_enroll2","_callee64","_this18","_callee64$","_context64","_ref24","_callee63","_yield$_request9","_callee63$","_context63","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","_x47","_x46","_verify2","_callee66","_this19","_callee66$","_context66","_ref25","_callee65","_yield$_request10","_callee65$","_context65","challenge_id","challengeId","_x49","_x48","_challenge2","_callee68","_this20","_callee68$","_context68","_ref26","_callee67","_callee67$","_context67","_x51","_x50","_challengeAndVerify2","_callee69","_yield$this$_challeng","challengeData","challengeError","_callee69$","_context69","_x52","_listFactors2","_callee70","_yield$this$getUser3","factors","_callee70$","_context70","filter","factor","_getAuthenticatorAssuranceLevel2","_callee72","_this21","_callee72$","_context72","_ref27","_callee71","currentLevel","nextLevel","verifiedFactors","currentAuthenticationMethods","_callee71$","_context71","aal","amr","_x53","default"],"sources":["/Users/flo/Documents/Documents - Flo’s MacBook Pro/Proiecte/new-learnings/node_modules/@supabase/gotrue-js/src/GoTrueClient.ts"],"sourcesContent":["import GoTrueAdminApi from './GoTrueAdminApi'\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants'\nimport {\n  AuthError,\n  AuthImplicitGrantRedirectError,\n  AuthPKCEGrantCodeExchangeError,\n  AuthInvalidCredentialsError,\n  AuthRetryableFetchError,\n  AuthSessionMissingError,\n  AuthInvalidTokenResponseError,\n  AuthUnknownError,\n  isAuthApiError,\n  isAuthError,\n  isAuthRetryableFetchError,\n} from './lib/errors'\nimport { Fetch, _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch'\nimport {\n  decodeJWTPayload,\n  Deferred,\n  getItemAsync,\n  isBrowser,\n  removeItemAsync,\n  resolveFetch,\n  setItemAsync,\n  uuid,\n  retryable,\n  sleep,\n  generatePKCEVerifier,\n  generatePKCEChallenge,\n  supportsLocalStorage,\n  stackGuard,\n  isInStackGuard,\n  stackGuardsSupported,\n  parseParametersFromURL,\n} from './lib/helpers'\nimport localStorageAdapter from './lib/local-storage'\nimport { polyfillGlobalThis } from './lib/polyfills'\nimport { version } from './lib/version'\n\nimport type {\n  AuthChangeEvent,\n  AuthResponse,\n  AuthTokenResponse,\n  AuthOtpResponse,\n  CallRefreshTokenResult,\n  GoTrueClientOptions,\n  InitializeResult,\n  OAuthResponse,\n  SSOResponse,\n  Provider,\n  Session,\n  SignInWithIdTokenCredentials,\n  SignInWithOAuthCredentials,\n  SignInWithPasswordCredentials,\n  SignInWithPasswordlessCredentials,\n  SignUpWithPasswordCredentials,\n  SignInWithSSO,\n  SignOut,\n  Subscription,\n  SupportedStorage,\n  User,\n  UserAttributes,\n  UserResponse,\n  VerifyOtpParams,\n  GoTrueMFAApi,\n  MFAEnrollParams,\n  AuthMFAEnrollResponse,\n  MFAChallengeParams,\n  AuthMFAChallengeResponse,\n  MFAUnenrollParams,\n  AuthMFAUnenrollResponse,\n  MFAVerifyParams,\n  AuthMFAVerifyResponse,\n  AuthMFAListFactorsResponse,\n  AMREntry,\n  AuthMFAGetAuthenticatorAssuranceLevelResponse,\n  AuthenticatorAssuranceLevels,\n  Factor,\n  MFAChallengeAndVerifyParams,\n  ResendParams,\n  AuthFlowType,\n  LockFunc,\n} from './lib/types'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS: Omit<Required<GoTrueClientOptions>, 'fetch' | 'storage' | 'lock'> = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n  flowType: 'implicit',\n  debug: false,\n}\n\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 30 * 1000\n\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3\n\nasync function lockNoOp<R>(name: string, acquireTimeout: number, fn: () => Promise<R>): Promise<R> {\n  return await fn()\n}\n\nexport default class GoTrueClient {\n  private static nextInstanceID = 0\n\n  private instanceID: number\n\n  /**\n   * Namespace for the GoTrue admin methods.\n   * These methods should only be used in a trusted server-side environment.\n   */\n  admin: GoTrueAdminApi\n  /**\n   * Namespace for the MFA methods.\n   */\n  mfa: GoTrueMFAApi\n  /**\n   * The storage key used to identify the values saved in localStorage\n   */\n  protected storageKey: string\n\n  /**\n   * The session object for the currently logged in user. If null, it means there isn't a logged-in user.\n   * Only used if persistSession is false.\n   */\n  protected inMemorySession: Session | null\n\n  protected flowType: AuthFlowType\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected storage: SupportedStorage\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected autoRefreshTicker: ReturnType<typeof setInterval> | null = null\n  protected visibilityChangedCallback: (() => Promise<any>) | null = null\n  protected refreshingDeferred: Deferred<CallRefreshTokenResult> | null = null\n  /**\n   * Keeps track of the async client initialization.\n   * When null or not yet resolved the auth state is `unknown`\n   * Once resolved the the auth state is known and it's save to call any further client methods.\n   * Keep extra care to never reject or throw uncaught errors\n   */\n  protected initializePromise: Promise<InitializeResult> | null = null\n  protected detectSessionInUrl = true\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n  protected lock: LockFunc\n\n  /**\n   * Used to broadcast state change events to other tabs listening.\n   */\n  protected broadcastChannel: BroadcastChannel | null = null\n\n  protected logDebugMessages: boolean\n\n  /**\n   * Create a new client for use in the browser.\n   */\n  constructor(options: GoTrueClientOptions) {\n    this.instanceID = GoTrueClient.nextInstanceID\n    GoTrueClient.nextInstanceID += 1\n\n    if (this.instanceID > 0 && isBrowser()) {\n      console.warn(\n        'Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.'\n      )\n    }\n\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n    this.logDebugMessages = settings.debug\n    this.inMemorySession = null\n    this.storageKey = settings.storageKey\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.persistSession = settings.persistSession\n    this.storage = settings.storage || localStorageAdapter\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch,\n    })\n\n    this.url = settings.url\n    this.headers = settings.headers\n    this.fetch = resolveFetch(settings.fetch)\n    this.lock = settings.lock || lockNoOp\n    this.detectSessionInUrl = settings.detectSessionInUrl\n    this.flowType = settings.flowType\n\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n    }\n\n    if (this.persistSession && this.storage === localStorageAdapter && !supportsLocalStorage()) {\n      console.warn(\n        `No storage option exists to persist the session, which may result in unexpected behavior when using auth.\n        If you want to set persistSession to true, please provide a storage option or you may set persistSession to false to disable this warning.`\n      )\n    }\n\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      try {\n        this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey)\n      } catch (e: any) {\n        console.error(\n          'Failed to create a new BroadcastChannel, multi-tab state changes will not be available',\n          e\n        )\n      }\n\n      this.broadcastChannel?.addEventListener('message', async (event) => {\n        this._debug('received broadcast notification from other tab or client', event)\n\n        await this._notifyAllSubscribers(event.data.event, event.data.session, false) // broadcast = false so we don't get an endless loop of messages\n      })\n    }\n\n    this.initialize()\n  }\n\n  private _debug(...args: any[]): GoTrueClient {\n    if (this.logDebugMessages) {\n      console.log(\n        `GoTrueClient@${this.instanceID} (${version}) ${new Date().toISOString()}`,\n        ...args\n      )\n    }\n\n    return this\n  }\n\n  /**\n   * Initializes the client session either from the url or from storage.\n   * This method is automatically called when instantiating the client, but should also be called\n   * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n   */\n  initialize(): Promise<InitializeResult> {\n    if (this.initializePromise) {\n      return this.initializePromise\n    }\n\n    return this._initialize()\n  }\n\n  /**\n   * IMPORTANT:\n   * 1. Never throw in this method, as it is called from the constructor\n   * 2. Never return a session from this method as it would be cached over\n   *    the whole lifetime of the client\n   */\n  private async _initialize(): Promise<InitializeResult> {\n    if (this.initializePromise) {\n      throw new Error('Double call of #_initialize()')\n    }\n\n    this.initializePromise = this._acquireLock(\n      -1,\n      async () =>\n        await stackGuard('_initialize', async () => {\n          try {\n            const isPKCEFlow = isBrowser() ? await this._isPKCEFlow() : false\n            this._debug('#_initialize()', 'begin', 'is PKCE flow', isPKCEFlow)\n\n            if (isPKCEFlow || (this.detectSessionInUrl && this._isImplicitGrantFlow())) {\n              const { data, error } = await this._getSessionFromURL(isPKCEFlow)\n              if (error) {\n                this._debug('#_initialize()', 'error detecting session from URL', error)\n\n                // failed login attempt via url,\n                // remove old session as in verifyOtp, signUp and signInWith*\n                await this._removeSession()\n\n                return { error }\n              }\n\n              const { session, redirectType } = data\n\n              this._debug(\n                '#_initialize()',\n                'detected session in URL',\n                session,\n                'redirect type',\n                redirectType\n              )\n\n              await this._saveSession(session)\n\n              setTimeout(async () => {\n                if (redirectType === 'recovery') {\n                  await this._notifyAllSubscribers('PASSWORD_RECOVERY', session)\n                } else {\n                  await this._notifyAllSubscribers('SIGNED_IN', session)\n                }\n              }, 0)\n\n              return { error: null }\n            }\n            // no login attempt via callback url try to recover session from storage\n            await this._recoverAndRefresh()\n            return { error: null }\n          } catch (error) {\n            if (isAuthError(error)) {\n              return { error }\n            }\n\n            return {\n              error: new AuthUnknownError('Unexpected error during initialization', error),\n            }\n          } finally {\n            await this._handleVisibilityChange()\n            this._debug('#_initialize()', 'end')\n          }\n        })\n    )\n\n    return await this.initializePromise\n  }\n\n  /**\n   * Creates a new user.\n   *\n   * Be aware that if a user account exists in the system you may get back an\n   * error message that attempts to hide this information from the user.\n   * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUp(credentials: SignUpWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          const codeVerifier = generatePKCEVerifier()\n          await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n          codeChallenge = await generatePKCEChallenge(codeVerifier)\n          codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n        }\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            email,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            data: options?.data ?? {},\n            channel: options?.channel ?? 'sms',\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user with an email and password or phone and password.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or that the\n   * email/phone and password combination is wrong or that the account can only\n   * be accessed via social login.\n   */\n  async signInWithPassword(credentials: SignInWithPasswordCredentials): Promise<AuthTokenResponse> {\n    try {\n      await this._removeSession()\n\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            email,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n      const { data, error } = res\n\n      if (error) {\n        return { data: { user: null, session: null }, error }\n      } else if (!data || !data.session || !data.user) {\n        return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data: { user: data.user, session: data.session }, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user via a third-party provider.\n   * This method supports the PKCE flow.\n   */\n  async signInWithOAuth(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    await this._removeSession()\n\n    return await this._handleProviderSignIn(credentials.provider, {\n      redirectTo: credentials.options?.redirectTo,\n      scopes: credentials.options?.scopes,\n      queryParams: credentials.options?.queryParams,\n      skipBrowserRedirect: credentials.options?.skipBrowserRedirect,\n    })\n  }\n\n  /**\n   * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n   */\n  async exchangeCodeForSession(authCode: string): Promise<AuthTokenResponse> {\n    const codeVerifier = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    const { data, error } = await _request(\n      this.fetch,\n      'POST',\n      `${this.url}/token?grant_type=pkce`,\n      {\n        headers: this.headers,\n        body: {\n          auth_code: authCode,\n          code_verifier: codeVerifier,\n        },\n        xform: _sessionResponse,\n      }\n    )\n    await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    if (error) {\n      return { data: { user: null, session: null }, error }\n    } else if (!data || !data.session || !data.user) {\n      return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() }\n    }\n    if (data.session) {\n      await this._saveSession(data.session)\n      await this._notifyAllSubscribers('SIGNED_IN', data.session)\n    }\n    return { data, error }\n  }\n\n  /**\n   * Allows signing in with an OIDC ID token. The authentication provider used\n   * should be enabled and configured.\n   */\n  async signInWithIdToken(credentials: SignInWithIdTokenCredentials): Promise<AuthTokenResponse> {\n    await this._removeSession()\n\n    try {\n      const { options, provider, token, access_token, nonce } = credentials\n\n      const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n        headers: this.headers,\n        body: {\n          provider,\n          id_token: token,\n          access_token,\n          nonce,\n          gotrue_meta_security: { captcha_token: options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n\n      const { data, error } = res\n      if (error) {\n        return { data: { user: null, session: null }, error }\n      } else if (!data || !data.session || !data.user) {\n        return {\n          data: { user: null, session: null },\n          error: new AuthInvalidTokenResponseError(),\n        }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user using magiclink or a one-time password (OTP).\n   *\n   * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n   * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n   * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or, that the account\n   * can only be accessed via social login.\n   *\n   * Do note that you will need to configure a Whatsapp sender on Twilio\n   * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n   * channel is not supported on other providers\n   * at this time.\n   * This method supports PKCE when an email is passed.\n   */\n  async signInWithOtp(credentials: SignInWithPasswordlessCredentials): Promise<AuthOtpResponse> {\n    try {\n      await this._removeSession()\n\n      if ('email' in credentials) {\n        const { email, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          const codeVerifier = generatePKCEVerifier()\n          await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n          codeChallenge = await generatePKCEChallenge(codeVerifier)\n          codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n        }\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            email,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      if ('phone' in credentials) {\n        const { phone, options } = credentials\n        const { data, error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            phone,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            channel: options?.channel ?? 'sms',\n          },\n        })\n        return { data: { user: null, session: null, messageId: data?.message_id }, error }\n      }\n      throw new AuthInvalidCredentialsError('You must provide either an email or phone number.')\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP received via mobile.\n   */\n  async verifyOtp(params: VerifyOtpParams): Promise<AuthResponse> {\n    try {\n      if (params.type !== 'email_change' && params.type !== 'phone_change') {\n        // we don't want to remove the authenticated session if the user is performing an email_change or phone_change verification\n        await this._removeSession()\n      }\n\n      let redirectTo = undefined\n      let captchaToken = undefined\n      if ('options' in params) {\n        redirectTo = params.options?.redirectTo\n        captchaToken = params.options?.captchaToken\n      }\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n        headers: this.headers,\n        body: {\n          ...params,\n          gotrue_meta_security: { captcha_token: captchaToken },\n        },\n        redirectTo,\n        xform: _sessionResponse,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw new Error('An error occurred on token verification.')\n      }\n\n      const session: Session | null = data.session\n      const user: User = data.user\n\n      if (session?.access_token) {\n        await this._saveSession(session as Session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Attempts a single-sign on using an enterprise Identity Provider. A\n   * successful SSO attempt will redirect the current page to the identity\n   * provider authorization page. The redirect URL is implementation and SSO\n   * protocol specific.\n   *\n   * You can use it by providing a SSO domain. Typically you can extract this\n   * domain by asking users for their email address. If this domain is\n   * registered on the Auth instance the redirect will use that organization's\n   * currently active SSO Identity Provider for the login.\n   *\n   * If you have built an organization-specific login page, you can use the\n   * organization's SSO Identity Provider UUID directly instead.\n   */\n  async signInWithSSO(params: SignInWithSSO): Promise<SSOResponse> {\n    try {\n      await this._removeSession()\n\n      return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n        body: {\n          ...('providerId' in params ? { provider_id: params.providerId } : null),\n          ...('domain' in params ? { domain: params.domain } : null),\n          redirect_to: params.options?.redirectTo ?? undefined,\n          ...(params?.options?.captchaToken\n            ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n            : null),\n          skip_http_redirect: true, // fetch does not handle redirects\n        },\n        headers: this.headers,\n        xform: _ssoResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Sends a reauthentication OTP to the user's email or phone number.\n   * Requires the user to be signed-in.\n   */\n  async reauthenticate(): Promise<AuthResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const {\n          data: { session },\n          error: sessionError,\n        } = result\n        if (sessionError) throw sessionError\n        if (!session) throw new AuthSessionMissingError()\n\n        const { error } = await _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n          headers: this.headers,\n          jwt: session.access_token,\n        })\n        return { data: { user: null, session: null }, error }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n   */\n  async resend(credentials: ResendParams): Promise<AuthOtpResponse> {\n    try {\n      if (credentials.type != 'email_change' && credentials.type != 'phone_change') {\n        await this._removeSession()\n      }\n\n      const endpoint = `${this.url}/resend`\n      if ('email' in credentials) {\n        const { email, type, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            email,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      } else if ('phone' in credentials) {\n        const { phone, type, options } = credentials\n        const { data, error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            phone,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n        })\n        return { data: { user: null, session: null, messageId: data?.message_id }, error }\n      }\n      throw new AuthInvalidCredentialsError(\n        'You must provide either an email or phone number and a type'\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Returns the session, refreshing it if necessary.\n   * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n   */\n  async getSession() {\n    return this._useSession(async (result) => {\n      return result\n    })\n  }\n\n  /**\n   * Acquires a global lock based on the storage key.\n   */\n  private async _acquireLock<R>(acquireTimeout: number, fn: () => Promise<R>): Promise<R> {\n    this._debug('#_acquireLock', 'begin', acquireTimeout)\n\n    try {\n      if (!(await stackGuardsSupported())) {\n        this._debug(\n          '#_acquireLock',\n          'Stack guards not supported, so exclusive locking is not performed as it can lead to deadlocks if the lock is attempted to be recursively acquired (as the recursion cannot be detected).'\n        )\n\n        return await fn()\n      }\n\n      if (isInStackGuard('_acquireLock')) {\n        this._debug('#_acquireLock', 'recursive call')\n        return await fn()\n      }\n\n      return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n        this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey)\n\n        try {\n          return await stackGuard('_acquireLock', async () => {\n            return await fn()\n          })\n        } finally {\n          this._debug('#_acquireLock', 'lock released for storage key', this.storageKey)\n        }\n      })\n    } finally {\n      this._debug('#_acquireLock', 'end')\n    }\n  }\n\n  /**\n   * Use instead of {@link #getSession} inside the library. It is\n   * semantically usually what you want, as getting a session involves some\n   * processing afterwards that requires only one client operating on the\n   * session at once across multiple tabs or processes.\n   */\n  private async _useSession<R>(\n    fn: (\n      result:\n        | {\n            data: {\n              session: Session\n            }\n            error: null\n          }\n        | {\n            data: {\n              session: null\n            }\n            error: AuthError\n          }\n        | {\n            data: {\n              session: null\n            }\n            error: null\n          }\n    ) => Promise<R>\n  ): Promise<R> {\n    this._debug('#_useSession', 'begin')\n\n    try {\n      if (isInStackGuard('_useSession')) {\n        this._debug('#_useSession', 'recursive call')\n\n        // the use of __loadSession here is the only correct use of the function!\n        const result = await this.__loadSession()\n\n        return await fn(result)\n      }\n\n      return await this._acquireLock(-1, async () => {\n        return await stackGuard('_useSession', async () => {\n          // the use of __loadSession here is the only correct use of the function!\n          const result = await this.__loadSession()\n\n          return await fn(result)\n        })\n      })\n    } finally {\n      this._debug('#_useSession', 'end')\n    }\n  }\n\n  /**\n   * NEVER USE DIRECTLY!\n   *\n   * Always use {@link #_useSession}.\n   */\n  private async __loadSession(): Promise<\n    | {\n        data: {\n          session: Session\n        }\n        error: null\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: AuthError\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: null\n      }\n  > {\n    this._debug('#__loadSession()', 'begin')\n\n    if (this.logDebugMessages && !isInStackGuard('_useSession') && (await stackGuardsSupported())) {\n      throw new Error('Please use #_useSession()')\n    }\n\n    if (isInStackGuard('_initialize')) {\n      this._debug('#__loadSession', '#_initialize recursion detected', new Error().stack)\n    }\n\n    // always wait for #_initialize() to finish before loading anything from\n    // storage\n    await this.initializePromise\n\n    try {\n      let currentSession: Session | null = null\n\n      if (this.persistSession) {\n        const maybeSession = await getItemAsync(this.storage, this.storageKey)\n\n        this._debug('#getSession()', 'session from storage', maybeSession)\n\n        if (maybeSession !== null) {\n          if (this._isValidSession(maybeSession)) {\n            currentSession = maybeSession\n          } else {\n            this._debug('#getSession()', 'session from storage is not valid')\n            await this._removeSession()\n          }\n        }\n      } else {\n        currentSession = this.inMemorySession\n        this._debug('#getSession()', 'session from memory', currentSession)\n      }\n\n      if (!currentSession) {\n        return { data: { session: null }, error: null }\n      }\n\n      const hasExpired = currentSession.expires_at\n        ? currentSession.expires_at <= Date.now() / 1000\n        : false\n\n      this._debug(\n        '#__loadSession()',\n        `session has${hasExpired ? '' : ' not'} expired`,\n        'expires_at',\n        currentSession.expires_at\n      )\n\n      if (!hasExpired) {\n        return { data: { session: currentSession }, error: null }\n      }\n\n      const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n      if (error) {\n        return { data: { session: null }, error }\n      }\n\n      return { data: { session }, error: null }\n    } finally {\n      this._debug('#__loadSession()', 'end')\n    }\n  }\n\n  /**\n   * Gets the current user details if there is an existing session.\n   * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n   */\n  async getUser(jwt?: string): Promise<UserResponse> {\n    try {\n      if (jwt) {\n        return await _request(this.fetch, 'GET', `${this.url}/user`, {\n          headers: this.headers,\n          jwt: jwt,\n          xform: _userResponse,\n        })\n      }\n\n      return await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) {\n          throw error\n        }\n\n        return await _request(this.fetch, 'GET', `${this.url}/user`, {\n          headers: this.headers,\n          jwt: data.session?.access_token ?? undefined,\n          xform: _userResponse,\n        })\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates user data for a logged in user.\n   */\n  async updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          throw sessionError\n        }\n        if (!sessionData.session) {\n          throw new AuthSessionMissingError()\n        }\n        const session: Session = sessionData.session\n        const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: attributes,\n          jwt: session.access_token,\n          xform: _userResponse,\n        })\n        if (userError) throw userError\n        session.user = data.user as User\n        await this._saveSession(session)\n        await this._notifyAllSubscribers('USER_UPDATED', session)\n\n        return { data: { user: session.user }, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Decodes a JWT (without performing any validation).\n   */\n  private _decodeJWT(jwt: string): {\n    exp?: number\n    aal?: AuthenticatorAssuranceLevels | null\n    amr?: AMREntry[] | null\n  } {\n    return decodeJWTPayload(jwt)\n  }\n\n  /**\n   * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n   * If the refresh token or access token in the current session is invalid, an error will be thrown.\n   * @param currentSession The current session that minimally contains an access token and refresh token.\n   */\n  async setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      if (!currentSession.access_token || !currentSession.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const timeNow = Date.now() / 1000\n      let expiresAt = timeNow\n      let hasExpired = true\n      let session: Session | null = null\n      const payload = decodeJWTPayload(currentSession.access_token)\n      if (payload.exp) {\n        expiresAt = payload.exp\n        hasExpired = expiresAt <= timeNow\n      }\n\n      if (hasExpired) {\n        const { session: refreshedSession, error } = await this._callRefreshToken(\n          currentSession.refresh_token\n        )\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!refreshedSession) {\n          return { data: { user: null, session: null }, error: null }\n        }\n        session = refreshedSession\n      } else {\n        const { data, error } = await this.getUser(currentSession.access_token)\n        if (error) {\n          throw error\n        }\n        session = {\n          access_token: currentSession.access_token,\n          refresh_token: currentSession.refresh_token,\n          user: data.user,\n          token_type: 'bearer',\n          expires_in: expiresAt - timeNow,\n          expires_at: expiresAt,\n        }\n        await this._saveSession(session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Returns a new session, regardless of expiry status.\n   * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n   * If the current session's refresh token is invalid, an error will be thrown.\n   * @param currentSession The current session. If passed in, it must contain a refresh token.\n   */\n  async refreshSession(currentSession?: { refresh_token: string }): Promise<AuthResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        if (!currentSession) {\n          const { data, error } = result\n          if (error) {\n            throw error\n          }\n\n          currentSession = data.session ?? undefined\n        }\n\n        if (!currentSession?.refresh_token) {\n          throw new AuthSessionMissingError()\n        }\n\n        const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!session) {\n          return { data: { user: null, session: null }, error: null }\n        }\n\n        return { data: { user: session.user, session }, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets the session data from a URL string\n   */\n  private async _getSessionFromURL(isPKCEFlow: boolean): Promise<\n    | {\n        data: { session: Session; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; redirectType: null }; error: AuthError }\n  > {\n    try {\n      if (!isBrowser()) throw new AuthImplicitGrantRedirectError('No browser detected.')\n      if (this.flowType === 'implicit' && !this._isImplicitGrantFlow()) {\n        throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.')\n      } else if (this.flowType == 'pkce' && !isPKCEFlow) {\n        throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.')\n      }\n\n      const params = parseParametersFromURL(window.location.href)\n\n      if (isPKCEFlow) {\n        if (!params.code) throw new AuthPKCEGrantCodeExchangeError('No code detected.')\n        const { data, error } = await this.exchangeCodeForSession(params.code)\n        if (error) throw error\n\n        const url = new URL(window.location.href)\n        url.searchParams.delete('code')\n\n        window.history.replaceState(window.history.state, '', url.toString())\n\n        return { data: { session: data.session, redirectType: null }, error: null }\n      }\n\n      if (params.error || params.error_description || params.error_code) {\n        throw new AuthImplicitGrantRedirectError(\n          params.error_description || 'Error in URL with unspecified error_description',\n          {\n            error: params.error || 'unspecified_error',\n            code: params.error_code || 'unspecified_code',\n          }\n        )\n      }\n\n      const {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        refresh_token,\n        expires_in,\n        token_type,\n      } = params\n\n      if (!access_token || !expires_in || !refresh_token || !token_type) {\n        throw new AuthImplicitGrantRedirectError('No session defined in URL')\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresIn = parseInt(expires_in)\n      const expires_at = timeNow + expiresIn\n\n      const { data, error } = await this.getUser(access_token)\n      if (error) throw error\n\n      const session: Session = {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        expires_in: expiresIn,\n        expires_at,\n        refresh_token,\n        token_type,\n        user: data.user!!,\n      }\n\n      // Remove tokens from URL\n      window.location.hash = ''\n      this._debug('#_getSessionFromURL()', 'clearing window.location.hash')\n\n      return { data: { session, redirectType: params.type }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, redirectType: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n   */\n  private _isImplicitGrantFlow(): boolean {\n    const params = parseParametersFromURL(window.location.href)\n\n    return !!(isBrowser() && (params.access_token || params.error_description))\n  }\n  /**\n   * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n   */\n  private async _isPKCEFlow(): Promise<boolean> {\n    const params = parseParametersFromURL(window.location.href)\n\n    const currentStorageContent = await getItemAsync(\n      this.storage,\n      `${this.storageKey}-code-verifier`\n    )\n\n    return !!(params.code && currentStorageContent)\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n   * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n   *\n   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n   * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n   *\n   * If using others scope, no `SIGNED_OUT` event is fired!\n   */\n  async signOut({ scope }: SignOut = { scope: 'global' }): Promise<{ error: AuthError | null }> {\n    return await this._useSession(async (result) => {\n      const { data, error: sessionError } = result\n      if (sessionError) {\n        return { error: sessionError }\n      }\n      const accessToken = data.session?.access_token\n      if (accessToken) {\n        const { error } = await this.admin.signOut(accessToken, scope)\n        if (error) {\n          // ignore 404s since user might not exist anymore\n          // ignore 401s since an invalid or expired JWT should sign out the current session\n          if (!(isAuthApiError(error) && (error.status === 404 || error.status === 401))) {\n            return { error }\n          }\n        }\n      }\n      if (scope !== 'others') {\n        await this._removeSession()\n        await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n        await this._notifyAllSubscribers('SIGNED_OUT', null)\n      }\n      return { error: null }\n    })\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * @param callback A callback function to be invoked when an auth event happens.\n   */\n  onAuthStateChange(\n    callback: (event: AuthChangeEvent, session: Session | null) => void | Promise<void>\n  ): {\n    data: { subscription: Subscription }\n  } {\n    const id: string = uuid()\n    const subscription: Subscription = {\n      id,\n      callback,\n      unsubscribe: () => {\n        this._debug('#unsubscribe()', 'state change callback with id removed', id)\n\n        this.stateChangeEmitters.delete(id)\n      },\n    }\n\n    this._debug('#onAuthStateChange()', 'registered callback with id', id)\n\n    this.stateChangeEmitters.set(id, subscription)\n\n    this._emitInitialSession(id)\n\n    return { data: { subscription } }\n  }\n\n  private async _emitInitialSession(id: string): Promise<void> {\n    return await this._useSession(async (result) => {\n      try {\n        const {\n          data: { session },\n          error,\n        } = result\n        if (error) throw error\n\n        await this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', session)\n        this._debug('INITIAL_SESSION', 'callback id', id, 'session', session)\n      } catch (err) {\n        await this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', null)\n        this._debug('INITIAL_SESSION', 'callback id', id, 'error', err)\n        console.error(err)\n      }\n    })\n  }\n\n  /**\n   * Sends a password reset request to an email address.\n   * This method supports the PKCE flow.\n   * @param email The email address of the user.\n   * @param options.redirectTo The URL to send the user to after they click the password reset link.\n   * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    let codeChallenge: string | null = null\n    let codeChallengeMethod: string | null = null\n    if (this.flowType === 'pkce') {\n      const codeVerifier = generatePKCEVerifier()\n      await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n      codeChallenge = await generatePKCEChallenge(codeVerifier)\n      codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n    }\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n        body: {\n          email,\n          code_challenge: codeChallenge,\n          code_challenge_method: codeChallengeMethod,\n          gotrue_meta_security: { captcha_token: options.captchaToken },\n        },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  private async _refreshAccessToken(refreshToken: string): Promise<AuthResponse> {\n    const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`\n    this._debug(debugName, 'begin')\n\n    try {\n      const startedAt = Date.now()\n\n      // will attempt to refresh the token with exponential backoff\n      return await retryable(\n        async (attempt) => {\n          await sleep(attempt * 200) // 0, 200, 400, 800, ...\n\n          this._debug(debugName, 'refreshing attempt', attempt)\n\n          return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: { refresh_token: refreshToken },\n            headers: this.headers,\n            xform: _sessionResponse,\n          })\n        },\n        (attempt, _, result) =>\n          result &&\n          result.error &&\n          isAuthRetryableFetchError(result.error) &&\n          // retryable only if the request can be sent before the backoff overflows the tick duration\n          Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION\n      )\n    } catch (error) {\n      this._debug(debugName, 'error', error)\n\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n      throw error\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private _isValidSession(maybeSession: unknown): maybeSession is Session {\n    const isValidSession =\n      typeof maybeSession === 'object' &&\n      maybeSession !== null &&\n      'access_token' in maybeSession &&\n      'refresh_token' in maybeSession &&\n      'expires_at' in maybeSession\n\n    return isValidSession\n  }\n\n  private async _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    }\n  ) {\n    const url: string = await this._getUrlForProvider(provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n      queryParams: options.queryParams,\n    })\n\n    this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url)\n\n    // try to open on the browser\n    if (isBrowser() && !options.skipBrowserRedirect) {\n      window.location.assign(url)\n    }\n\n    return { data: { provider, url }, error: null }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    const debugName = '#_recoverAndRefresh()'\n    this._debug(debugName, 'begin')\n\n    try {\n      const currentSession = await getItemAsync(this.storage, this.storageKey)\n      this._debug(debugName, 'session from storage', currentSession)\n\n      if (!this._isValidSession(currentSession)) {\n        this._debug(debugName, 'session is not valid')\n        if (currentSession !== null) {\n          await this._removeSession()\n        }\n\n        return\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresWithMargin = (currentSession.expires_at ?? Infinity) < timeNow + EXPIRY_MARGIN\n\n      this._debug(\n        debugName,\n        `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${EXPIRY_MARGIN}s`\n      )\n\n      if (expiresWithMargin) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n\n          if (error) {\n            console.error(error)\n\n            if (!isAuthRetryableFetchError(error)) {\n              this._debug(\n                debugName,\n                'refresh failed with a non-retryable error, removing the session',\n                error\n              )\n              await this._removeSession()\n            }\n          }\n        }\n      } else {\n        // no need to persist currentSession again, as we just loaded it from\n        // local storage; persisting it again may overwrite a value saved by\n        // another client with access to the same local storage\n        await this._notifyAllSubscribers('SIGNED_IN', currentSession)\n      }\n    } catch (err) {\n      this._debug(debugName, 'error', err)\n\n      console.error(err)\n      return\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private async _callRefreshToken(refreshToken: string): Promise<CallRefreshTokenResult> {\n    if (!refreshToken) {\n      throw new AuthSessionMissingError()\n    }\n\n    // refreshing is already in progress\n    if (this.refreshingDeferred) {\n      return this.refreshingDeferred.promise\n    }\n\n    const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`\n\n    this._debug(debugName, 'begin')\n\n    try {\n      this.refreshingDeferred = new Deferred<CallRefreshTokenResult>()\n\n      const { data, error } = await this._refreshAccessToken(refreshToken)\n      if (error) throw error\n      if (!data.session) throw new AuthSessionMissingError()\n\n      await this._saveSession(data.session)\n      await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session)\n\n      const result = { session: data.session, error: null }\n\n      this.refreshingDeferred.resolve(result)\n\n      return result\n    } catch (error) {\n      this._debug(debugName, 'error', error)\n\n      if (isAuthError(error)) {\n        const result = { session: null, error }\n\n        this.refreshingDeferred?.resolve(result)\n\n        return result\n      }\n\n      this.refreshingDeferred?.reject(error)\n      throw error\n    } finally {\n      this.refreshingDeferred = null\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private async _notifyAllSubscribers(\n    event: AuthChangeEvent,\n    session: Session | null,\n    broadcast = true\n  ) {\n    const debugName = `#_notifyAllSubscribers(${event})`\n    this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`)\n\n    try {\n      if (this.broadcastChannel && broadcast) {\n        this.broadcastChannel.postMessage({ event, session })\n      }\n\n      const errors: any[] = []\n      const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\n        try {\n          await x.callback(event, session)\n        } catch (e: any) {\n          errors.push(e)\n        }\n      })\n\n      await Promise.all(promises)\n\n      if (errors.length > 0) {\n        for (let i = 0; i < errors.length; i += 1) {\n          console.error(errors[i])\n        }\n\n        throw errors[0]\n      }\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private async _saveSession(session: Session) {\n    this._debug('#_saveSession()', session)\n\n    if (!this.persistSession) {\n      this.inMemorySession = session\n    }\n\n    if (this.persistSession && session.expires_at) {\n      await this._persistSession(session)\n    }\n  }\n\n  private _persistSession(currentSession: Session) {\n    this._debug('#_persistSession()', currentSession)\n\n    return setItemAsync(this.storage, this.storageKey, currentSession)\n  }\n\n  private async _removeSession() {\n    this._debug('#_removeSession()')\n\n    if (this.persistSession) {\n      await removeItemAsync(this.storage, this.storageKey)\n    } else {\n      this.inMemorySession = null\n    }\n  }\n\n  /**\n   * Removes any registered visibilitychange callback.\n   *\n   * {@see #startAutoRefresh}\n   * {@see #stopAutoRefresh}\n   */\n  private _removeVisibilityChangedCallback() {\n    this._debug('#_removeVisibilityChangedCallback()')\n\n    const callback = this.visibilityChangedCallback\n    this.visibilityChangedCallback = null\n\n    try {\n      if (callback && isBrowser() && window?.removeEventListener) {\n        window.removeEventListener('visibilitychange', callback)\n      }\n    } catch (e) {\n      console.error('removing visibilitychange callback failed', e)\n    }\n  }\n\n  /**\n   * This is the private implementation of {@link #startAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _startAutoRefresh() {\n    await this._stopAutoRefresh()\n\n    this._debug('#_startAutoRefresh()')\n\n    const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION)\n    this.autoRefreshTicker = ticker\n\n    if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n      // ticker is a NodeJS Timeout object that has an `unref` method\n      // https://nodejs.org/api/timers.html#timeoutunref\n      // When auto refresh is used in NodeJS (like for testing) the\n      // `setInterval` is preventing the process from being marked as\n      // finished and tests run endlessly. This can be prevented by calling\n      // `unref()` on the returned object.\n      ticker.unref()\n      // @ts-ignore\n    } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n      // similar like for NodeJS, but with the Deno API\n      // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n      // @ts-ignore\n      Deno.unrefTimer(ticker)\n    }\n\n    // run the tick immediately, but in the next pass of the event loop so that\n    // #_initialize can be allowed to complete without recursively waiting on\n    // itself\n    setTimeout(async () => {\n      await this.initializePromise\n      await this._autoRefreshTokenTick()\n    }, 0)\n  }\n\n  /**\n   * This is the private implementation of {@link #stopAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _stopAutoRefresh() {\n    this._debug('#_stopAutoRefresh()')\n\n    const ticker = this.autoRefreshTicker\n    this.autoRefreshTicker = null\n\n    if (ticker) {\n      clearInterval(ticker)\n    }\n  }\n\n  /**\n   * Starts an auto-refresh process in the background. The session is checked\n   * every few seconds. Close to the time of expiration a process is started to\n   * refresh the session. If refreshing fails it will be retried for as long as\n   * necessary.\n   *\n   * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n   * to call this function, it will be called for you.\n   *\n   * On browsers the refresh process works only when the tab/window is in the\n   * foreground to conserve resources as well as prevent race conditions and\n   * flooding auth with requests. If you call this method any managed\n   * visibility change callback will be removed and you must manage visibility\n   * changes on your own.\n   *\n   * On non-browser platforms the refresh process works *continuously* in the\n   * background, which may not be desirable. You should hook into your\n   * platform's foreground indication mechanism and call these methods\n   * appropriately to conserve resources.\n   *\n   * {@see #stopAutoRefresh}\n   */\n  async startAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._startAutoRefresh()\n  }\n\n  /**\n   * Stops an active auto refresh process running in the background (if any).\n   *\n   * If you call this method any managed visibility change callback will be\n   * removed and you must manage visibility changes on your own.\n   *\n   * See {@link #startAutoRefresh} for more details.\n   */\n  async stopAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._stopAutoRefresh()\n  }\n\n  /**\n   * Runs the auto refresh token tick.\n   */\n  private async _autoRefreshTokenTick() {\n    this._debug('#_autoRefreshTokenTick()', 'begin')\n\n    try {\n      const now = Date.now()\n\n      try {\n        return await this._useSession(async (result) => {\n          const {\n            data: { session },\n          } = result\n\n          if (!session || !session.refresh_token || !session.expires_at) {\n            this._debug('#_autoRefreshTokenTick()', 'no session')\n            return\n          }\n\n          // session will expire in this many ticks (or has already expired if <= 0)\n          const expiresInTicks = Math.floor(\n            (session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION\n          )\n\n          this._debug(\n            '#_autoRefreshTokenTick()',\n            `access token expires in ${expiresInTicks} ticks, a tick lasts ${AUTO_REFRESH_TICK_DURATION}ms, refresh threshold is ${AUTO_REFRESH_TICK_THRESHOLD} ticks`\n          )\n\n          if (expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD) {\n            await this._callRefreshToken(session.refresh_token)\n          }\n        })\n      } catch (e: any) {\n        console.error('Auto refresh tick failed with error. This is likely a transient error.', e)\n      }\n    } finally {\n      this._debug('#_autoRefreshTokenTick()', 'end')\n    }\n  }\n\n  /**\n   * Registers callbacks on the browser / platform, which in-turn run\n   * algorithms when the browser window/tab are in foreground. On non-browser\n   * platforms it assumes always foreground.\n   */\n  private async _handleVisibilityChange() {\n    this._debug('#_handleVisibilityChange()')\n\n    if (!isBrowser() || !window?.addEventListener) {\n      if (this.autoRefreshToken) {\n        // in non-browser environments the refresh token ticker runs always\n        this.startAutoRefresh()\n      }\n\n      return false\n    }\n\n    try {\n      this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false)\n\n      window?.addEventListener('visibilitychange', this.visibilityChangedCallback)\n\n      // now immediately call the visbility changed callback to setup with the\n      // current visbility state\n      await this._onVisibilityChanged(true) // initial call\n    } catch (error) {\n      console.error('_handleVisibilityChange', error)\n    }\n  }\n\n  /**\n   * Callback registered with `window.addEventListener('visibilitychange')`.\n   */\n  private async _onVisibilityChanged(isInitial: boolean) {\n    this._debug(`#_onVisibilityChanged(${isInitial})`, 'visibilityState', document.visibilityState)\n\n    if (document.visibilityState === 'visible') {\n      // to avoid recursively depending on #_initialize(), run the visibility\n      // changed callback in the next event loop tick\n      setTimeout(async () => {\n        if (!isInitial) {\n          // initial visibility change setup is handled in another flow under #initialize()\n          await this.initializePromise\n          await this._recoverAndRefresh()\n\n          this._debug(\n            '#_onVisibilityChanged()',\n            'finished waiting for initialize, _recoverAndRefresh'\n          )\n        }\n\n        if (this.autoRefreshToken) {\n          // in browser environments the refresh token ticker runs only on focused tabs\n          // which prevents race conditions\n          this._startAutoRefresh()\n        }\n      }, 0)\n    } else if (document.visibilityState === 'hidden') {\n      if (this.autoRefreshToken) {\n        this._stopAutoRefresh()\n      }\n    }\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n   * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n   */\n  private async _getUrlForProvider(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    if (this.flowType === 'pkce') {\n      const codeVerifier = generatePKCEVerifier()\n      await setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier)\n      const codeChallenge = await generatePKCEChallenge(codeVerifier)\n      const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256'\n\n      this._debug(\n        'PKCE',\n        'code verifier',\n        `${codeVerifier.substring(0, 5)}...`,\n        'code challenge',\n        codeChallenge,\n        'method',\n        codeChallengeMethod\n      )\n\n      const flowParams = new URLSearchParams({\n        code_challenge: `${encodeURIComponent(codeChallenge)}`,\n        code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n      })\n      urlParams.push(flowParams.toString())\n    }\n    if (options?.queryParams) {\n      const query = new URLSearchParams(options.queryParams)\n      urlParams.push(query.toString())\n    }\n\n    return `${this.url}/authorize?${urlParams.join('&')}`\n  }\n\n  private async _unenroll(params: MFAUnenrollParams): Promise<AuthMFAUnenrollResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        })\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#enroll}\n   */\n  private async _enroll(params: MFAEnrollParams): Promise<AuthMFAEnrollResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n          body: {\n            friendly_name: params.friendlyName,\n            factor_type: params.factorType,\n            issuer: params.issuer,\n          },\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        })\n\n        if (error) {\n          return { data: null, error }\n        }\n\n        if (data?.totp?.qr_code) {\n          data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`\n        }\n\n        return { data, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#verify}\n   */\n  private async _verify(params: MFAVerifyParams): Promise<AuthMFAVerifyResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        const { data, error } = await _request(\n          this.fetch,\n          'POST',\n          `${this.url}/factors/${params.factorId}/verify`,\n          {\n            body: { code: params.code, challenge_id: params.challengeId },\n            headers: this.headers,\n            jwt: sessionData?.session?.access_token,\n          }\n        )\n        if (error) {\n          return { data: null, error }\n        }\n\n        await this._saveSession({\n          expires_at: Math.round(Date.now() / 1000) + data.expires_in,\n          ...data,\n        })\n        await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data)\n\n        return { data, error }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challenge}\n   */\n  private async _challenge(params: MFAChallengeParams): Promise<AuthMFAChallengeResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        return await _request(\n          this.fetch,\n          'POST',\n          `${this.url}/factors/${params.factorId}/challenge`,\n          {\n            headers: this.headers,\n            jwt: sessionData?.session?.access_token,\n          }\n        )\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challengeAndVerify}\n   */\n  private async _challengeAndVerify(\n    params: MFAChallengeAndVerifyParams\n  ): Promise<AuthMFAVerifyResponse> {\n    const { data: challengeData, error: challengeError } = await this._challenge({\n      factorId: params.factorId,\n    })\n    if (challengeError) {\n      return { data: null, error: challengeError }\n    }\n    return await this._verify({\n      factorId: params.factorId,\n      challengeId: challengeData.id,\n      code: params.code,\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#listFactors}\n   */\n  private async _listFactors(): Promise<AuthMFAListFactorsResponse> {\n    const {\n      data: { user },\n      error: userError,\n    } = await this.getUser()\n    if (userError) {\n      return { data: null, error: userError }\n    }\n\n    const factors = user?.factors || []\n    const totp = factors.filter(\n      (factor) => factor.factor_type === 'totp' && factor.status === 'verified'\n    )\n\n    return {\n      data: {\n        all: factors,\n        totp,\n      },\n      error: null,\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n   */\n  private async _getAuthenticatorAssuranceLevel(): Promise<AuthMFAGetAuthenticatorAssuranceLevelResponse> {\n    return await this._useSession(async (result) => {\n      const {\n        data: { session },\n        error: sessionError,\n      } = result\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n      if (!session) {\n        return {\n          data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n          error: null,\n        }\n      }\n\n      const payload = this._decodeJWT(session.access_token)\n\n      let currentLevel: AuthenticatorAssuranceLevels | null = null\n\n      if (payload.aal) {\n        currentLevel = payload.aal\n      }\n\n      let nextLevel: AuthenticatorAssuranceLevels | null = currentLevel\n\n      const verifiedFactors =\n        session.user.factors?.filter((factor: Factor) => factor.status === 'verified') ?? []\n\n      if (verifiedFactors.length > 0) {\n        nextLevel = 'aal2'\n      }\n\n      const currentAuthenticationMethods = payload.amr || []\n\n      return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null }\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}